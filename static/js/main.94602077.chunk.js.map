{"version":3,"sources":["logo.svg","layers/Layer.js","colors.js","components/RaceDataBrowser.js","pages/Grid.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layer","map","layer","adder","this","id","sourceId","source","type","sourceLayer","addLayer","getFeature","bind","removeLayer","opacity","isText","setPaintProperty","replace","color","getPaintProperty","properties","name","featureId","state","setFeatureState","value","getFeatureState","querySourceFeatures","filter","queryRenderedFeatures","layers","feature","part","args","on","off","callback","isSourceLoaded","handler","changeColorLuminance","hex","lum","String","length","c","i","rgb","parseInt","substr","Math","round","min","max","toString","colorAndHoverAlt","raceGroups","num","window","mapboxgl","accessToken","city_configs","center","zoom","Grid","props","mapLoaded","selectDemo","showBorder","federal","house","senate","maps","fillPrecincts","fetch","then","res","json","gj","state_house","state_senate","forEach","city","Map","container","refs","style","attributionControl","pitchWithRotate","dragPan","touchZoomRotate","addControl","NavigationControl","addSource","data","push","paint","url","layerName","lyr","setOpacity","setState","e","target","demoGroup","className","checked","onChange","changeDemo","ref","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.94602077.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// The addBelowLabels method gives the right look on the Mapbox \"streets\" basemap,\r\n// while addBelowSymbols gives the right look on the \"light\" basemap.\r\n\r\n/**\r\n * Add the layer to the map below the first label layer (e.g. street names).\r\n * @param {mapboxgl.Map} map\r\n * @param {Layer} layer\r\n */\r\nexport function addBelowLabels(map, layer) {\r\n    const layers = map.getStyle().layers;\r\n    const firstSymbolId = getFirstLabelId(layers);\r\n    map.addLayer(layer, firstSymbolId);\r\n}\r\n\r\nexport function addBelowSymbols(map, layer) {\r\n    const layers = map.getStyle().layers;\r\n    const firstSymbolId = getFirstSymbolId(layers);\r\n    map.addLayer(layer, firstSymbolId);\r\n}\r\n\r\n/**\r\n * @param {Object[]} layers list of layers from the Mapbox map's style\r\n * @returns {string} id of the first id with \"label\" in the name\r\n */\r\nfunction getFirstLabelId(layers) {\r\n    for (let i = 0; i < layers.length; i++) {\r\n        if (layers[i].id.includes(\"label\")) {\r\n            return layers[i].id;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getFirstSymbolId(layers) {\r\n    for (let i = 0; i < layers.length; i++) {\r\n        if (layers[i].type === \"symbol\") {\r\n            return layers[i].id;\r\n        }\r\n    }\r\n}\r\n\r\n/** A layer on a Mapbox map. */\r\nexport default class Layer {\r\n    /**\r\n     * @param {mapboxgl.Map} map to add the layer to\r\n     * @param {Object} layer a Layer object obeying the Mapbox style specification\r\n     * @param {function} [adder] a function (map, layer) -> void that adds the layer\r\n     *  to the map.\r\n     */\r\n    constructor(map, layer, adder) {\r\n        this.map = map;\r\n        this.layer = layer;\r\n        this.id = layer.id;\r\n        this.sourceId = layer.source;\r\n        this.type = layer.type;\r\n        this.sourceLayer = layer[\"source-layer\"];\r\n\r\n        if (adder) {\r\n            adder(map, layer);\r\n        } else if (map) {\r\n            map.addLayer(layer);\r\n        }\r\n\r\n        this.getFeature = this.getFeature.bind(this);\r\n    }\r\n    addToMap(map) {\r\n      if (map && !this.map) {\r\n        this.map = map;\r\n        map.addLayer(this.layer);\r\n      }\r\n    }\r\n    remove() {\r\n      if (this.map) {\r\n        this.map.removeLayer(this.id);\r\n        this.map = null;\r\n      }\r\n    }\r\n    setOpacity(opacity, isText) {\r\n        this.setPaintProperty(`${isText ? \"text\" : this.type.replace(\"symbol\", \"icon\")}-opacity`, opacity);\r\n    }\r\n    setColor(color) {\r\n        this.setPaintProperty(`${this.type}-color`, color);\r\n    }\r\n    getColor() {\r\n        return this.getPaintProperty(`${this.type}-color`);\r\n    }\r\n    setPaintProperties(properties) {\r\n        for (let name in properties) {\r\n            this.setPaintProperty(name, properties[name]);\r\n        }\r\n    }\r\n    setFeatureState(featureId, state) {\r\n        this.map.setFeatureState(\r\n            {\r\n                source: this.sourceId,\r\n                sourceLayer: this.sourceLayer,\r\n                id: featureId\r\n            },\r\n            state\r\n        );\r\n    }\r\n    setPaintProperty(name, value) {\r\n        this.map.setPaintProperty(this.id, name, value);\r\n    }\r\n    getPaintProperty(name) {\r\n        return this.map.getPaintProperty(this.id, name);\r\n    }\r\n    getFeatureState(featureId) {\r\n        return this.map.getFeatureState({\r\n            source: this.sourceId,\r\n            sourceLayer: this.sourceLayer,\r\n            id: featureId\r\n        });\r\n    }\r\n    getFeature(featureId) {\r\n        const features = this.map.querySourceFeatures(this.sourceId, {\r\n            sourceLayer: this.sourceLayer,\r\n            filter: [\"==\", [\"id\"], featureId]\r\n        });\r\n        return features[0];\r\n    }\r\n    queryRenderedFeatures() {\r\n        return this.map.queryRenderedFeatures(null, { layers: [this.id] });\r\n    }\r\n    querySourceFeatures() {\r\n        return this.map.querySourceFeatures(this.sourceId, {\r\n            sourceLayer: this.sourceLayer\r\n        });\r\n    }\r\n    getAssignment(featureId) {\r\n        return this.getFeatureState(featureId).color;\r\n    }\r\n    setAssignment(feature, part) {\r\n        this.setFeatureState(feature.id, {\r\n            ...feature.state,\r\n            color: part\r\n        });\r\n    }\r\n    on(type, ...args) {\r\n        this.map.on(type, this.id, ...args);\r\n    }\r\n    off(type, ...args) {\r\n        this.map.off(type, this.id, ...args);\r\n    }\r\n    untilSourceLoaded(callback) {\r\n        if (this.map.isSourceLoaded(this.sourceId)) {\r\n            return callback();\r\n        }\r\n        const handler = () =>\r\n            callback(() => this.map.off(\"sourcedata\", handler));\r\n        this.map.on(\"sourcedata\", handler);\r\n    }\r\n}\r\n","export function changeColorLuminance(hex, lum) {\n    // validate hex string\n    hex = String(hex).replace(/[^0-9a-f]/gi, \"\");\n    if (hex.length < 6) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    lum = lum || 0;\n\n    // convert to decimal and change luminosity\n    let rgb = \"#\",\n        c,\n        i;\n    for (i = 0; i < 3; i++) {\n        c = parseInt(hex.substr(i * 2, 2), 16);\n        c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n        rgb += (\"00\" + c).substr(c.length);\n    }\n\n    return rgb;\n}\n\nexport function getUnitColorProperty(parts) {\n    const unitColorStyle = [\n        \"match\",\n        [\"feature-state\", \"color\"],\n        ...parts\n            .map(part => [part.id, part.color])\n            .reduce((list, pair) => [...list, ...pair]),\n        \"rgba(0, 0, 0, 0)\"\n    ];\n\n    const hoveredUnitColorStyle = [\n        \"match\",\n        [\"feature-state\", \"color\"],\n        ...parts\n            .map(part => [part.id, part.hoverColor])\n            .reduce((list, pair) => [...list, ...pair]),\n        \"#aaaaaa\"\n    ];\n\n    const unitColorProperty = [\n        \"case\",\n        [\"boolean\", [\"feature-state\", \"hover\"], false],\n        hoveredUnitColorStyle,\n        unitColorStyle\n    ];\n\n    return unitColorProperty;\n}\n\nfunction colorAndHoverAlt(hex) {\n  return [\n    \"case\",\n    [\"==\", [\"feature-state\", \"hover\"], true],\n    changeColorLuminance(hex, -0.3),\n    hex\n  ]\n}\n\nexport const incomeColors = [\"case\",\n  [\"<\", [\"get\", \"B19013_001\"], 30000],\n  colorAndHoverAlt(\"#edf8fb\"),\n  [\"<\", [\"get\", \"B19013_001\"], 60000],\n  colorAndHoverAlt(\"#ccece6\"),\n  [\"<\", [\"get\", \"B19013_001\"], 90000],\n  colorAndHoverAlt(\"#99d8c9\"),\n  [\"<\", [\"get\", \"B19013_001\"], 120000],\n  colorAndHoverAlt(\"#66c2a4\"),\n  [\"<\", [\"get\", \"B19013_001\"], 150000],\n  colorAndHoverAlt(\"#2ca25f\"),\n  colorAndHoverAlt(\"#006d2c\")\n]\n\nexport const ageColors = [\"case\",\n  [\"<\", [\"get\", \"B01002_001\"], 20],\n  colorAndHoverAlt(\"#edf8fb\"),\n  [\"<\", [\"get\", \"B01002_001\"], 35],\n  colorAndHoverAlt(\"#ccece6\"),\n  [\"<\", [\"get\", \"B01002_001\"], 50],\n  colorAndHoverAlt(\"#99d8c9\"),\n  [\"<\", [\"get\", \"B01002_001\"], 65],\n  colorAndHoverAlt(\"#66c2a4\"),\n  [\"<\", [\"get\", \"B01002_001\"], 80],\n  colorAndHoverAlt(\"#2ca25f\"),\n  colorAndHoverAlt(\"#006d2c\"),\n]\n\nconst partyRGBColors = {\n  Democratic: [\n    0, \"rgba(0,0,0,0)\",\n    0.499, \"rgba(0,0,0,0)\",\n    0.5, \"rgba(249,249,249,0)\",\n    1, \"rgb(25, 118, 210)\" // 0x1976d2\n  ],\n  Democratic_hover: [\n    0, \"rgba(0,0,0,0)\",\n    0.499, \"rgba(0,0,0,0)\",\n    0.5, \"rgba(174,174,174,0.5)\",\n    1, \"rgb(18, 83, 147)\"\n  ],\n  Republican: [\n    0, \"rgba(0,0,0,0)\",\n    0.499, \"rgba(0,0,0,0)\",\n    0.5, \"rgba(249,249,249,0)\",\n    1, \"rgb(211, 47, 47)\" // 0xd32f2f\n  ],\n  Republican_hover: [\n    0, \"rgba(0,0,0,0)\",\n    0.499, \"rgba(0,0,0,0)\",\n    0.5, \"rgba(174,174,174,0.5)\",\n    1, \"rgb(148, 33, 33)\"\n  ],\n};\n\nexport function densityColors(demoGroup) {\n  return [\"case\",\n    [\"==\", [\"get\", \"TOTPOP\"], 0],\n      \"#ccc\", // no data\n      [\n        \"interpolate\",\n        [\"linear\"],\n        [\"/\", [\"get\", demoGroup[1]], [\"get\", \"TOTPOP\"]],\n        0,\n        [\"case\",\n          [\"==\", [\"feature-state\", \"hover\"], true],\n          \"rgba(140, 140, 179, 0)\",\n          \"rgba(200, 200, 255, 0)\",\n        ],\n        (demoGroup[2] + 0.01),\n        [\"case\",\n          [\"==\", [\"feature-state\", \"hover\"], true],\n          \"rgba(0, 0, 179, 0.6)\",\n          \"rgba(0, 0, 255, 0.6)\",\n        ],\n      ]\n  ]\n}\n\nexport const rentalColors = [\n  \"case\",\n  [\"==\", [\"+\", [\"get\", \"B25003_002\"], [\"get\", \"B25003_003\"]], 0], \"#ccc\", // no houses\n  [\">\", [\"/\", [\"get\", \"B25003_003\"], [\"+\", [\"get\", \"B25003_002\"], [\"get\", \"B25003_003\"]]], 0.5],\n  colorAndHoverAlt(\"#FFA500\"), // > 50% rent\n  colorAndHoverAlt(\"#00008B\") // 0-50% rent\n]\n\nexport const internetColors = [\n  \"case\",\n  [\"==\", [\"get\", \"TOTPOP\"], 0], \"#ccc\", // no houses\n  [\">\", [\"/\", [\"get\", \"B28008_004\"], [\"get\", \"TOTPOP\"]], 0.75],\n  colorAndHoverAlt(\"#FFA500\"), // > 75% broadband\n  colorAndHoverAlt(\"#00008B\") // 0-75% broadband\n]\n\nexport function electionColors(demKey, repKey) {\n  return [\n    \"case\",\n    [\">\", [\"get\", demKey], [\"get\", repKey]],\n      [\"case\",\n        [\"==\", [\"feature-state\", \"hover\"], true],\n        [\n            \"interpolate\",\n            [\"linear\"],\n            [\"/\", [\"get\", demKey], [\"+\", [\"get\", demKey], [\"get\", repKey]]],\n            ...partyRGBColors[\"Democratic_hover\"],\n        ],\n        [\n            \"interpolate\",\n            [\"linear\"],\n            [\"/\", [\"get\", demKey], [\"+\", [\"get\", demKey], [\"get\", repKey]]],\n            ...partyRGBColors[\"Democratic\"],\n        ]\n      ],\n      [\"case\",\n        [\"==\", [\"feature-state\", \"hover\"], true],\n        [\n            \"interpolate\",\n            [\"linear\"],\n            [\"/\", [\"get\", repKey], [\"+\", [\"get\", demKey], [\"get\", repKey]]],\n            ...partyRGBColors[\"Republican_hover\"],\n        ],\n        [\n            \"interpolate\",\n            [\"linear\"],\n            [\"/\", [\"get\", repKey], [\"+\", [\"get\", demKey], [\"get\", repKey]]],\n            ...partyRGBColors[\"Republican\"],\n        ]\n      ]\n  ]\n}\n\nexport const enviroPaint = {\n  'circle-radius': 4,\n  'circle-color': [\n    'match',\n    ['get', 'CLASS_STATUS'],\n    'Title V', 'purple',\n    'Synthetic Minor', 'green',\n    'Small', 'red',\n    'Permit Exempt', 'blue',\n    'Registered', 'orange',\n    'Permit/Registration Pending', 'yellow',\n    '#ccc' // other\n  ]\n}\n","import React from 'react'\n\nexport const raceGroups = [\n  // display name, shapefile key, maximum % (0.01-1.00), graph color\n  ['White', 'NH_WHITE', 1.00, \"#f00\"],\n  ['Black', 'NH_BLACK', 1.00, \"#f0f\"],\n  ['Hispanic', 'HISP', 0.81, \"#00f\"],\n  ['Asian', 'NH_ASIAN', 0.65, \"#0f0\"],\n  ['American Indian', 'NH_AMIN', 0.93, \"#ff0\"],\n  ['Native Hawaiian or Pacific Islander', 'NH_NHPI', 0.02, \"#0ff\"],\n  ['Other', 'NH_OTHER', 0.20, \"#ccc\"],\n  ['2+ Races', 'NH_2MORE', 0.13, \"#ccc\"],\n]\n\nconst demoColors = [0,1,2,3,4,5,6,7,8].map((num,i) => `rgba(${200*(8-i)/8}, ${200*(8-i)/8}, 255, ${i/8*0.6})`)\n\nlet lastSelected = []\n\nexport function RaceDataBrowser(props) {\n  let selected = props.selected.length ? props.selected : lastSelected;\n  lastSelected = selected;\n\n  // try reducing to tracts\n  // let tracts = {};\n  // selected.forEach((bg) => {\n  //   let tract = bg.properties.GEOID.substring(0, bg.properties.GEOID.length - 1)\n  //   if (!tracts[tract]) {\n  //     tracts[tract] = {properties:{GEOID:tract,TOTPOP:bg.properties.TOTPOP}}\n  //     raceGroups.map((r, k) => {\n  //       tracts[tract].properties[r[1]] = bg.properties[r[1]]\n  //     })\n  //   } else {\n  //     tracts[tract].properties.TOTPOP += bg.properties.TOTPOP\n  //     raceGroups.map((r, k) => {\n  //       tracts[tract].properties[r[1]] += bg.properties[r[1]]\n  //     })\n  //   }\n  // });\n\n  // {Object.keys(tracts).sort().map((t0, c) => {\n  //   let bg = tracts[t0]\n  //   return <span className=\"color-col\" key={c}>\n  //     {raceGroups.filter(r => bg.properties[r[1]]).map((r, k) =>\n  //       <span className=\"segment\" key={k} style={{\n  //         background: r[3],\n  //         height: bg.properties[r[1]] / 100,\n  //         // bg.properties[r[1]] / bg.properties.TOTPOP * 100,\n  //         width: Math.max(1, 500 / Object.keys(tracts).length)\n  //       }}></span>\n  //     )}\n  //   </span>\n  // })}\n\n  return <div>\n    <span>Source: US Census ACS (2018)</span>\n    <br/>\n    <select value={props.focusRace} onChange={props.changeFocus}>\n      {raceGroups.map((r, i) =>\n        <option value={i} key={i}>{r[0]}</option>\n      )}\n    </select>\n\n    <br/><br/>\n\n    <div className=\"palette gradient\" style={{background:\"linear-gradient(to right, rgba(200, 200, 255, 0), rgba(0, 0, 255, 0.6))\"}}>\n    </div>\n    <div className=\"nums\">\n      {demoColors.map((color, i) =>\n        <div className=\"square\" key={i}>\n          {(Math.min(1, raceGroups[props.focusRace][2] + 0.01) * i / 0.08).toFixed(1)}\n        </div>\n      )}\n      <div className=\"palette\" style={{textAlign: \"center\", width: 330 }}>\n        % of blockgroup\n      </div>\n    </div>\n\n    <div className=\"popbars\">\n      {selected.sort((a, b) => (a.properties.GEOID - b.properties.GEOID)).map((bg, c) =>\n        <span className=\"color-col\" key={c}>\n          {raceGroups.filter(r => bg.properties[r[1]]).map((r, k) =>\n            <span className=\"segment\" key={k} style={{\n              background: r[3],\n              height: bg.properties[r[1]] / bg.properties.TOTPOP * 100,\n                // bg.properties[r[1]] / 50,\n              width: Math.max(1, 500 / selected.length)\n            }}></span>\n          )}\n        </span>\n      )}\n    </div>\n  </div>\n}\n","import React from 'react'\n\n// map management\nimport Layer from '../layers/Layer'\n// import { HoverWithRadius } from '../layers/Hover'\nimport { densityColors } from '../colors'\nimport { raceGroups } from '../components/RaceDataBrowser'\n\n\nwindow.mapboxgl.accessToken = \"pk.eyJ1IjoiZGlzdHJpY3RyIiwiYSI6ImNqbjUzMTE5ZTBmcXgzcG81ZHBwMnFsOXYifQ.8HRRLKHEJA0AismGk2SX2g\";\n\nconst city_configs = [\n  {\n    name: \"Charlotte\",\n    center: [-80.8428907, 35.2241038],\n    zoom: 9\n  },\n  {\n    name: \"Raleigh\",\n    center: [-78.6394881, 35.7780928],\n    zoom: 10\n  },\n\n  {\n    name: \"Greensboro\",\n    center: [-79.794579, 36.0728101],\n    zoom: 9\n  },\n  {\n    name: \"Durham\",\n    center: [-78.9068315, 35.99429],\n    zoom: 9\n  },\n  {\n    name: \"Winston-Salem\",\n    center: [-80.2495087, 36.0971022],\n    zoom: 9\n  },\n  {\n    name: \"Fayetteville\",\n    center: [-78.880853, 35.0517772],\n    zoom: 9\n  },\n  {\n    name: \"Cary\",\n    center: [-78.7847445, 35.7839415],\n    zoom: 10\n  },\n  {\n    name: \"Wilmington\",\n    center: [-77.8971587, 34.20855],\n    zoom: 10\n  },\n  {\n    name: \"High Point\",\n    center: [-80.0104744, 35.9557965],\n    zoom: 10\n  },\n]\n\nexport default class Grid extends React.Component {\n  constructor (props) {\n    super()\n\n    this.state = {\n      mapLoaded: false,\n      layer: \"federal\",\n      selectDemo: -1\n    }\n    this.showBorder = this.showBorder.bind(this)\n    this.layers = {\n      federal: [],\n      house: [],\n      senate: []\n    }\n  }\n\n  componentDidMount() {\n    this.maps = []\n    this.fillPrecincts = []\n\n    fetch(\"/nc-districts/nc-geo/current_districts.geojson\").then(res => res.json()).then((gj) => {\n    fetch(\"/nc-districts/nc-geo/state_house_districts.geojson?r2\").then(res => res.json()).then((state_house) => {\n    fetch(\"/nc-districts/nc-geo/state_senate_districts.geojson\").then(res => res.json()).then((state_senate) => {\n\n      city_configs.forEach((city, i) => {\n        let map = new window.mapboxgl.Map({\n          container: this.refs[\"map\" + i],\n          style: 'mapbox://styles/mapbox/light-v10',\n          center: city.center,\n          zoom: city.zoom,\n          attributionControl: false,\n          pitchWithRotate: false,\n          // preserveDrawingBuffer: true,\n          dragPan: true,\n          touchZoomRotate: true,\n        })\n\n        map.on('load', () => {\n          map.addControl(new window.mapboxgl.NavigationControl())\n\n          map.addSource('districts', {\n            type: \"geojson\",\n            data: gj\n          })\n          this.layers.federal.push(new Layer(map, {\n            id: 'districts',\n            source: 'districts',\n            type: 'line',\n            paint: {\n              'line-color': '#555',\n              'line-width': 1.5\n            }\n          }))\n\n          map.addSource('state_senate', {\n            type: \"geojson\",\n            data: state_senate\n          })\n          this.layers.senate.push(new Layer(map, {\n            id: 'state_senate',\n            source: 'state_senate',\n            type: 'line',\n            paint: {\n              'line-color': '#555',\n              'line-width': 1.5,\n              'line-opacity': 0\n            }\n          }))\n\n          map.addSource('state_house', {\n            type: \"geojson\",\n            data: state_house\n          })\n          this.layers.house.push(new Layer(map, {\n            id: 'state_house',\n            source: 'state_house',\n            type: 'line',\n            paint: {\n              'line-color': '#555',\n              'line-width': 1.5,\n              'line-opacity': 0\n            }\n          }))\n\n          // NC precincts\n          map.addSource('precincts', {\n            type: \"vector\",\n            url: \"mapbox://districtr.nc_precincts\"\n          })\n          new Layer(map, {\n            id: 'precincts-borders',\n            source: 'precincts',\n            'source-layer': 'nc_precincts',\n            type: 'line',\n            paint: {\n              \"line-color\": \"#777777\",\n              \"line-width\": [\"interpolate\", [\"linear\"], [\"zoom\"], 0, 0, 7, 1],\n              \"line-opacity\": 0.3\n            }\n          })\n          this.fillPrecincts.push(new Layer(map, {\n            id: 'precincts',\n            source: 'precincts',\n            'source-layer': 'nc_precincts',\n            type: 'fill',\n            paint: {\n              \"fill-color\": \"#ccc\",\n              \"fill-opacity\": 0\n            }\n          }))\n          // let cursorPrecincts = new HoverWithRadius(\n          //   fillPrecincts,\n          //   20,\n          //   this.setMapSelection.bind(this)\n          // )\n        })\n      })\n    })})})\n  }\n\n  setMapSelection() {\n\n  }\n\n  showBorder(layerName) {\n    this.layers[this.state.layer].forEach((lyr) => {\n      lyr.setOpacity(0)\n    })\n\n    let layerList = this.layers[layerName];\n    layerList.forEach((lyr) => {\n      lyr.setOpacity(1)\n    })\n    this.setState({ layer: layerName })\n  }\n\n  changeDemo (e) {\n    // console.log(e.target.value)\n    let selectDemo = e.target.value;\n    this.fillPrecincts.forEach((lyr) => {\n      if (selectDemo * 1 == -1) {\n        lyr.setOpacity(0)\n      } else {\n        lyr.setPaintProperty(\n          \"fill-color\",\n          densityColors(raceGroups[selectDemo])\n        )\n        lyr.setOpacity(0.45)\n      }\n    })\n    this.setState({ selectDemo: selectDemo })\n  }\n\n  render() {\n    return <>\n      <div className=\"options\">\n        <label>\n          <input type=\"radio\" name=\"districts\" checked={this.state.layer === \"federal\"} value=\"fed\" onChange={(e) => { this.showBorder(\"federal\")}}/>\n          <span>US Congress</span>\n        </label>\n        <label>\n          <input type=\"radio\" name=\"districts\" checked={this.state.layer === \"senate\"} value=\"senate\" onChange={(e) => { this.showBorder(\"senate\")}}/>\n          <span>State Senate</span>\n        </label>\n        <label>\n          <input type=\"radio\" name=\"districts\" checked={this.state.layer === \"house\"} value=\"house\" onChange={(e) => { this.showBorder(\"house\")}}/>\n          <span>State House</span>\n        </label>\n        <label>\n          <select value={this.state.selectDemo} onChange={this.changeDemo.bind(this)}>\n            <option value=\"-1\">By Precinct</option>\n            <option value=\"0\">White</option>\n            <option value=\"1\">Black</option>\n            <option value=\"2\">Hispanic</option>\n            <option value=\"3\">Asian</option>\n            <option value=\"4\">American Indian</option>\n            <option value=\"5\">Native Hawaiian / Pacific Islander</option>\n            <option value=\"6\">Other</option>\n            <option value=\"7\">Two or more</option>\n          </select>\n        </label>\n      </div>\n      <div className=\"map-row\">\n        <div className=\"map-cell\">\n          <h4>{city_configs[0].name}</h4>\n          <div className=\"map-square\" ref=\"map0\">\n          </div>\n        </div>\n        <div className=\"map-cell\">\n          <h4>{city_configs[1].name}</h4>\n          <div className=\"map-square\" ref=\"map1\">\n          </div>\n        </div>\n        <div className=\"map-cell\">\n          <h4>{city_configs[2].name}</h4>\n          <div className=\"map-square\" ref=\"map2\">\n          </div>\n        </div>\n      </div>\n      <div className=\"map-row\">\n        <div className=\"map-cell\">\n          <h4>{city_configs[3].name}</h4>\n          <div className=\"map-square\" ref=\"map3\">\n          </div>\n        </div>\n        <div className=\"map-cell\">\n          <h4>{city_configs[4].name}</h4>\n          <div className=\"map-square\" ref=\"map4\">\n          </div>\n        </div>\n        <div className=\"map-cell\">\n          <h4>{city_configs[5].name}</h4>\n          <div className=\"map-square\" ref=\"map5\">\n          </div>\n        </div>\n      </div>\n      <div className=\"map-row\">\n        <div className=\"map-cell\">\n          <h4>{city_configs[6].name}</h4>\n          <div className=\"map-square\" ref=\"map6\">\n          </div>\n        </div>\n        <div className=\"map-cell\">\n          <h4>{city_configs[7].name}</h4>\n          <div className=\"map-square\" ref=\"map7\">\n          </div>\n        </div>\n        <div className=\"map-cell\">\n          <h4>{city_configs[8].name}</h4>\n          <div className=\"map-square\" ref=\"map8\">\n          </div>\n        </div>\n      </div>\n    </>\n  }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n// import Map from './pages/Map';\nimport Grid from './pages/Grid';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <section>\n        <Grid/>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}