{"version":3,"sources":["logo.svg","components/ChooseLayers.js","components/Paintbrush.js","colors.js","components/AgeHistogram.js","components/IncomeHistogram.js","components/RentalLegend.js","components/ElectionTable.js","components/RaceDataBrowser.js","components/EnvLegend.js","components/MedLegend.js","components/UniLegend.js","components/CoalLegend.js","layers/Layer.js","layers/Hover.js","pages/Map.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","dataLayers","name","units","menu","ChooseLayers","props","state","selectItem","clickTest","bind","event","label","preventDefault","this","disabled","setState","indexOf","switchLayer","className","style","borderBottom","map","m","key","href","id","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","filter","i","onClick","e","React","Component","Paintbrush","colors","color","visible","displayNumber","k","title","type","value","checked","onChange","background","onInput","nextColor","find","target","addNewColorButton","changeColorLuminance","hex","lum","String","replace","length","c","rgb","parseInt","substr","Math","round","min","max","toString","getUnitColorProperty","parts","unitColorStyle","part","reduce","list","pair","hoverColor","colorAndHoverAlt","incomeColors","ageColors","partyRGBColors","densityColors","demoGroup","rentalColors","enviroPaint","AgeHistogram","totals","keys","selected","median_point","median_age","col_max_height","Object","properties","p","sort","a","b","split","forEach","tot_pop","blockgroup","TOTPOP","B01002_001","median_pop","kdex","cols","age_range","years","height","width","is_median","toFixed","IncomeHistogram","median_name","x","tot_hh","ind","median_hh","floor","RentalLegend","marginRight","elections","ElectionTable","total_votes","precinct","selectedElection","changeElection","toLocaleString","raceGroups","demoColors","num","lastSelected","RaceDataBrowser","focusRace","changeFocus","r","textAlign","GEOID","bg","colorDot","EnvLegend","CoalLegend","Layer","layer","adder","sourceId","source","sourceLayer","addLayer","getFeature","removeLayer","opacity","isText","setPaintProperty","getPaintProperty","featureId","setFeatureState","getFeatureState","querySourceFeatures","queryRenderedFeatures","layers","feature","args","on","off","callback","isSourceLoaded","handler","HoverWithRadius","radius","setMapSelection","hoveredFeatures","featureState","hover","features","deactivatedHover","box","point","southwest","y","boxAround","hoverOff","hoverOn","hoveredFeature","onMouseMove","onMouseLeave","mouseover","window","mapboxgl","accessToken","Map","mapLoaded","currentColorLayer","currentUnitLayer","unitLayers","pointLayers","mapSelection","state_configs","nc","center","zoom","container","refs","attributionControl","pitchWithRotate","dragPan","touchZoomRotate","geocoder","MapboxGeocoder","marker","addControl","NavigationControl","fetch","then","res","json","gj","addSource","data","paint","url","borderPrecincts","fillPrecincts","cursorPrecincts","borderBGs","fillBGs","cursorBGs","activate","text","txt","gjf","row","lat","lng","push","geometry","coordinates","blockgroups","blockgroups_border","blockgroups_cursor","precincts","precincts_border","precincts_cursor","paintAge","items","demKey","repKey","newSelection","newElection","newFocus","layer_id","selectLayer","remove","addToMap","deactivate","paintIncome","paintRace","paintRental","activeLayer","ref","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"0IAAAA,EAAOC,QAAU,IAA0B,kC,iJCE9BC,EAAa,CACxB,CACEC,KAAM,MACNC,MAAO,cACPC,KAAM,GAER,CACEF,KAAM,SACNC,MAAO,cACPC,KAAM,GAER,CACEF,KAAM,OACNC,MAAO,cACPC,KAAM,GAER,CACEF,KAAM,SACNC,MAAO,cACPC,KAAM,GAER,CACEF,KAAM,YACNC,MAAO,YACPC,KAAM,GAER,CACEF,KAAM,WACNC,MAAO,SACPC,KAAM,GAER,CACEF,KAAM,WACNC,MAAO,SACPC,KAAM,GAMR,CACEF,KAAM,WACNC,MAAO,SACPC,KAAM,GAER,CACEF,KAAM,YACNC,MAAO,SACPC,KAAM,IAIGC,EAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,gBAEKC,MAAQ,CACXC,WAAY,GAGd,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBAPA,EADrB,sDAWaC,EAAOC,GAChBD,EAAME,iBACDC,KAAKR,MAAMS,WACdD,KAAKE,SAAS,CAAER,WAAYP,EAAWgB,QAAQL,KAC/CE,KAAKR,MAAMY,YAAYjB,EAAWgB,QAAQL,OAfhD,+BAmBa,IAAD,OACR,OAAO,yBAAKO,UAAU,0BAA0BC,MAAO,CAACC,aAAc,qBACpE,wBAAIF,UAAU,sBACX,CAAC,eAAgB,SAAU,aAAaG,KAAI,SAAClB,EAAMmB,GAAP,OAC3C,wBAAIJ,UAAU,oBAAoBK,IAAKD,GACrC,uBAAGJ,UAAU,2BAA2BM,KAAK,IAAIC,GAAG,iBAAiBC,KAAK,SAASC,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SAC1I1B,GAEH,yBAAKe,UAAU,gBAAgBY,kBAAgB,kBAC5C9B,EAAW+B,QAAO,SAAApB,GAAK,OAAKA,EAAMR,OAASmB,KAAID,KAAI,SAACV,EAAOqB,GAAR,OAClD,uBAAGT,IAAKS,EAAGd,UAAU,gBAAgBM,KAAK,IAAIS,QAAS,SAACC,GAAQ,EAAK1B,UAAU0B,EAAGvB,KAC/EA,EAAMV,oBA9BzB,GAAkCkC,IAAMC,WChCzB,SAASC,EAAWhC,GACjC,IAAIiC,EAAS,CAAC,CAACC,MAAM,OAAQC,SAAQ,EAAKC,cAAc,EAAEhB,GAAG,GAC3D,CAACc,MAAM,OAAQC,SAAQ,EAAKC,cAAc,EAAEhB,GAAG,IAEjD,OAAO,yBAAKP,UAAU,aAChB,wBAAIA,UAAU,wBACToB,EAAOP,QAAO,SAAAQ,GAAK,OAAIA,EAAMC,WACvBnB,KAAI,SAACkB,EAAOG,GAAR,OACH,wBACIxB,UAAU,mCACVyB,MAAOJ,EAAME,cACblB,IAAKmB,GAEL,2BACIE,KAAK,QACLnB,GAAI,gBAAkBc,EAAMd,GAC5BxB,KAAK,cACL4C,MAAON,EAAMd,GACbqB,SAAS,EACTC,SAAU,OAEd,yBACI7B,UAAU,yBACVC,MAAO,CAAC6B,WAAYT,EAAMA,aA3CtD,SAA2BD,EAAQW,GAC/B,IAAMC,EAAYZ,EAAOa,MAAK,SAAAZ,GAAK,OAAsB,IAAlBA,EAAMC,WAK7C,OAAKU,EAGE,4BACHhC,UAAU,gCACVe,QATY,WACZiB,EAAUV,SAAU,EACpBS,EAAQ,CAAEG,OAAQ,CAAEP,MAAOK,EAAUzB,OAQrCkB,MAAM,qBAEN,uBAAGzB,UAAU,kBAAb,QAPO,GAwCFmC,CAAkBf,GAAQ,iB,WCjDhC,SAASgB,EAAqBC,EAAKC,IAEtCD,EAAME,OAAOF,GAAKG,QAAQ,cAAe,KACjCC,OAAS,IACbJ,EAAMA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAE3DC,EAAMA,GAAO,EAGb,IACII,EACA5B,EAFA6B,EAAM,IAGV,IAAK7B,EAAI,EAAGA,EAAI,EAAGA,IACf4B,EAAIE,SAASP,EAAIQ,OAAW,EAAJ/B,EAAO,GAAI,IAEnC6B,IAAQ,MADRD,EAAII,KAAKC,MAAMD,KAAKE,IAAIF,KAAKG,IAAI,EAAGP,EAAIA,EAAIJ,GAAM,MAAMY,SAAS,MAC/CL,OAAOH,EAAED,QAG/B,OAAOE,EAGJ,SAASQ,EAAqBC,GACjC,IAAMC,EAAc,CAChB,QACA,CAAC,gBAAiB,UAFF,mBAGbD,EACEjD,KAAI,SAAAmD,GAAI,MAAI,CAACA,EAAK/C,GAAI+C,EAAKjC,UAC3BkC,QAAO,SAACC,EAAMC,GAAP,4BAAoBD,GAApB,YAA6BC,QALzB,CAMhB,qBAmBJ,MAP0B,CACtB,OACA,CAAC,UAAW,CAAC,gBAAiB,UAAU,GAXjB,CACvB,QACA,CAAC,gBAAiB,UAFK,mBAGpBL,EACEjD,KAAI,SAAAmD,GAAI,MAAI,CAACA,EAAK/C,GAAI+C,EAAKI,eAC3BH,QAAO,SAACC,EAAMC,GAAP,4BAAoBD,GAApB,YAA6BC,QALlB,CAMvB,YAOAJ,GAMR,SAASM,EAAiBtB,GACxB,MAAO,CACL,OACA,CAAC,KAAM,CAAC,gBAAiB,UAAU,GACnCD,EAAqBC,GAAM,IAC3BA,GAIG,IAAMuB,EAAe,CAAC,OAC3B,CAAC,IAAK,CAAC,MAAO,cAAe,KAC7BD,EAAiB,WACjB,CAAC,IAAK,CAAC,MAAO,cAAe,KAC7BA,EAAiB,WACjB,CAAC,IAAK,CAAC,MAAO,cAAe,KAC7BA,EAAiB,WACjB,CAAC,IAAK,CAAC,MAAO,cAAe,MAC7BA,EAAiB,WACjB,CAAC,IAAK,CAAC,MAAO,cAAe,MAC7BA,EAAiB,WACjBA,EAAiB,YAGNE,EAAY,CAAC,OACxB,CAAC,IAAK,CAAC,MAAO,cAAe,IAC7BF,EAAiB,WACjB,CAAC,IAAK,CAAC,MAAO,cAAe,IAC7BA,EAAiB,WACjB,CAAC,IAAK,CAAC,MAAO,cAAe,IAC7BA,EAAiB,WACjB,CAAC,IAAK,CAAC,MAAO,cAAe,IAC7BA,EAAiB,WACjB,CAAC,IAAK,CAAC,MAAO,cAAe,IAC7BA,EAAiB,WACjBA,EAAiB,YAGbG,EACQ,CACV,EAAG,gBACH,KAAO,gBACP,GAAK,sBACL,EAAG,qBALDA,EAOc,CAChB,EAAG,gBACH,KAAO,gBACP,GAAK,wBACL,EAAG,oBAXDA,EAaQ,CACV,EAAG,gBACH,KAAO,gBACP,GAAK,sBACL,EAAG,oBAjBDA,EAmBc,CAChB,EAAG,gBACH,KAAO,gBACP,GAAK,wBACL,EAAG,oBAIA,SAASC,EAAcC,GAC5B,MAAO,CAAC,OACN,CAAC,KAAM,CAAC,MAAO,UAAW,GACxB,OACA,CACE,cACA,CAAC,UACD,CAAC,IAAK,CAAC,MAAOA,EAAU,IAAK,CAAC,MAAO,WACrC,EACA,CAAC,OACC,CAAC,KAAM,CAAC,gBAAiB,UAAU,GACnC,yBACA,0BAEDA,EAAU,GAAK,IAChB,CAAC,OACC,CAAC,KAAM,CAAC,gBAAiB,UAAU,GACnC,uBACA,0BAMH,IAAMC,EAAe,CAC1B,OACA,CAAC,KAAM,CAAC,IAAK,CAAC,MAAO,cAAe,CAAC,MAAO,eAAgB,GAAI,OAChE,CAAC,IAAK,CAAC,IAAK,CAAC,MAAO,cAAe,CAAC,IAAK,CAAC,MAAO,cAAe,CAAC,MAAO,gBAAiB,IACvF,SACF,YAwCK,IAAMC,EAAc,CACzB,gBAAiB,EACjB,eAAgB,CACd,QACA,CAAC,MAAO,gBACR,UAAW,SACX,kBAAmB,QACnB,QAAS,MACT,gBAAiB,OACjB,aAAc,SACd,8BAA+B,SAC/B,SC5LW,SAASC,EAAahF,GACnC,IAAIiF,EAAS,GACTC,EAAO,GACPC,EAAWnF,EAAMmF,SACjBC,EAAe,GACfC,EAAa,EACbC,EAAiB,EAErB,GAAIH,EAAS7B,OAAQ,EACnB4B,EAAOK,OAAOL,KAAKC,EAAS,GAAGK,YAC1B9D,QAAO,SAAA+D,GAAC,OAA0B,IAAtBA,EAAE9E,QAAQ,WACtB+E,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,MAAM,KAAK,GAAGxC,QAAQ,KAAM,KAAOuC,EAAEC,MAAM,KAAK,GAAGxC,QAAQ,KAAM,SAElFyC,SAAQ,SAAAzD,GAAC,OAAI4C,EAAO5C,GAAK,KAE9B,IAAI0D,EAAU,EACdZ,EAASW,SAAQ,SAACE,GAChBd,EAAKY,SAAQ,SAAAzD,GAAC,OAAI4C,EAAO5C,IAAM2D,EAAWR,WAAWnD,MACrD0D,GAAWC,EAAWR,WAAWS,OACjCZ,GAAcW,EAAWR,WAAWS,OAASD,EAAWR,WAAWU,cAErEb,GAAcU,EAEd,IAAII,EAAaJ,EAAU,EAC3Bb,EAAKY,SAAQ,SAACzD,EAAG+D,GACM,KAAjBhB,IACFe,GAAclB,EAAO5C,KACH,IAChB+C,EAAegB,MAMvB,IAAIC,EAAOnB,EAAKlE,KAAI,SAAAqB,GAClB,IAAIiE,EAAYjE,EAAEgB,QAAQ,OAAQ,OAAOA,QAAQ,SAAU,SAASwC,MAAM,KACtEU,EAA8B,IAArBD,EAAUhD,OAAgB,EAAKgD,EAAU,GAAKA,EAAU,GAAK,EACtEE,EAASvB,EAAO5C,GAAKkE,EAEzB,OADAjB,EAAiB3B,KAAKG,IAAIwB,EAAgBkB,GACnC,CAAEC,MAAe,EAARF,EAAWC,OAAQA,MAGrC,OAAO,6BACL,mDACA,yBAAK3F,UAAU,WACZ6D,EAAUhD,QAAO,SAAA6B,GAAC,MAAa,SAATA,EAAE,MAAevC,KAAI,SAACkB,EAAOP,GAAR,OAC1C,yBAAKd,UAAU,SAASK,IAAKS,EAAGb,MAAO,CAAC6B,WAAYT,EAAM,UAI9D,yBAAKrB,UAAU,QACZ6D,EAAUhD,QAAO,SAAA6B,GAAC,MAAa,MAATA,EAAE,MAAYvC,KAAI,SAACkB,EAAOP,GAAR,OACvC,yBAAKd,UAAU,SAASK,IAAKS,GAC1BA,EAAI,GAAK,KACTO,EAAM,OAGX,yBAAKrB,UAAU,UAAf,KACK6D,EAAUA,EAAUpB,OAAS,GAAG,KAIvC,8DACA,yBAAKzC,UAAU,aACZwF,EAAKrF,KAAI,SAACuC,EAAG6C,GACZ,IAAIM,EAAaN,IAAShB,EAC1B,OAAO,yBAAKlE,IAAKkF,EAAMtF,MAAO,CAC5B6B,WAAa+D,EAAY,OAAS,OAClCD,MAAOlD,EAAEkD,MACTD,OAASjD,EAAEiD,OAASlB,EAAiB,WAK1Ce,EAAK/C,OACF,6BACA,qDACA,6BACA,yCAAe+B,EAAaA,EAAWsB,QAAQ,GAAK,QAEpD,MChFO,SAASC,EAAgB5G,GACtC,IAAIiF,EAAS,GACTC,EAAO,GACPC,EAAWnF,EAAMmF,SACjBC,EAAe,GACfyB,EAAc,GACdvB,EAAiB,EAErB,GAAIH,EAAS7B,OAAQ,CACnB4B,EAAOK,OAAOL,KAAKC,EAAS,GAAGK,YAC1B9D,QAAO,SAAA+D,GAAC,OAA6B,IAAzBA,EAAE9E,QAAQ,cACtB+E,OAELT,EAASC,EAAKlE,KAAI,SAAA8F,GAAC,OAAI,KAEvB,IAAIC,EAAS,EACb5B,EAASW,SAAQ,SAACE,GAChBd,EAAKY,SAAQ,SAACzD,EAAG2E,GACf/B,EAAO+B,IAAQhB,EAAWR,WAAWnD,GACrC0E,GAAUf,EAAWR,WAAWnD,SAIpC,IAAI4E,EAAYF,EAAS,EACzB9B,EAAOa,SAAQ,SAACzD,EAAG+D,GACjBd,EAAiB3B,KAAKG,IAAIwB,EAAgBjD,GACrB,KAAjB+C,IACF6B,GAAa5E,IACI,IACf+C,EAAegB,EACfS,EAAc,CACZ,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,WACA,WACA,WACA,UACAT,OAMV,OAAO,6BACL,gEACA,yBAAKvF,UAAU,WACZ4D,EAAa/C,QAAO,SAAA6B,GAAC,MAAa,SAATA,EAAE,MAAevC,KAAI,SAACkB,EAAOP,GAAR,OAC7C,yBAAKd,UAAU,SAASK,IAAKS,EAAGb,MAAO,CAAC6B,WAAYT,EAAM,UAI9D,yBAAKrB,UAAU,QACZ4D,EAAa/C,QAAO,SAAA6B,GAAC,MAAa,MAATA,EAAE,MAAYvC,KAAI,SAACkB,EAAOP,GAAR,OAC1C,yBAAKd,UAAU,SAASK,IAAKS,GAC1BA,EAAI,GAAK,KACTgC,KAAKuD,MAAMhF,EAAM,GAAK,KAFzB,QAKF,yBAAKrB,UAAU,UAAf,KACK8C,KAAKuD,MAAMzC,EAAaA,EAAanB,OAAS,GAAG,GAAK,KAD3D,MAKF,8DACA,yBAAKzC,UAAU,aACZoE,EAAOjE,KAAI,SAACuC,EAAG6C,GACd,IAAIM,EAAaN,IAAShB,EAC1B,OAAO,yBAAKlE,IAAKkF,EAAMtF,MAAO,CAC5B6B,WAAa+D,EAAY,OAAS,OAClCD,MAAO,GACPD,OAASjD,EAAI+B,EAAiB,WAKnCL,EAAO3B,OACJ,6BACA,gDACA,6BACCuD,EACC,yCAAeA,EAAYxD,QAAQ,OAAQ,IAAIA,QAAQ,IAAK,aAC1D,MAGJ,MClGO,SAAS8D,EAAanH,GACpBA,EAAMmF,SAGrB,OAAO,6BACL,6EACA,6BACA,8DACA,yBAAKtE,UAAU,WACb,yBAAKA,UAAU,SAASC,MAAO,CAAC6B,WAAW,OAAOyE,YAAY,KADhE,aAGE,6BACA,yBAAKvG,UAAU,SAASC,MAAO,CAAC6B,WAAW,WAAWyE,YAAY,KAClE,8BAAO,kBACP,6BACA,yBAAKvG,UAAU,SAASC,MAAO,CAAC6B,WAAW,SAASyE,YAAY,KAChE,8BAAO,mBChBN,IAAMC,EAAY,CAEvB,CAAC,KAAM,YAAa,aAAc,cAClC,CAAC,KAAM,WAAY,aAAc,cACjC,CAAC,KAAM,YAAa,aAAc,cAClC,CAAC,KAAM,YAAa,aAAc,cAClC,CAAC,KAAM,YAAa,aAAc,cAClC,CAAC,KAAM,WAAY,aAAc,cACjC,CAAC,KAAM,WAAY,aAAc,cACjC,CAAC,KAAM,YAAa,aAAc,cAClC,CAAC,KAAM,YAAa,aAAc,eAG7B,SAASC,EAActH,GAC5B,IAAImF,EAAWnF,EAAMmF,SACjBoC,EAAc,GAElB,GAAIpC,EAAS7B,OAAQ,CACnB,IAAI4B,EAAOK,OAAOL,KAAKC,EAAS,GAAGK,YAChC9D,QAAO,SAAA+D,GAAC,OAAwB,IAApBA,EAAE9E,QAAQ,SAEzBuE,EAAKY,SAAQ,SAAAzD,GAAC,OAAIkF,EAAYlF,GAAK,KAEnC8C,EAASW,SAAQ,SAAA0B,GACftC,EAAKY,SAAQ,SAAAzD,GAAC,OAAIkF,EAAYlF,IAAMmF,EAAShC,WAAWnD,SAI5D,OAAO,6BACL,0DACA,2GACA,6BACA,4BAAQG,MAAOxC,EAAMyH,iBAAkB/E,SAAU1C,EAAM0H,gBACpDL,EAAUrG,KAAI,SAACa,EAAGF,GAAJ,OACb,4BAAQT,IAAKS,EAAGa,MAAOb,GAAIE,EAAE,GAAK,IAAMA,EAAE,QAG9C,6BAAK,6BACL,sDACA,2BAAOhB,UAAU,SACf,+BACE,4BACE,oCACA,wCACA,0CACA,4CAGJ,+BACGwG,EAAUrG,KAAI,SAACa,EAAGF,GAAJ,OACb,wBAAIT,IAAKS,GACP,4BAAKE,EAAE,IACP,4BAAKA,EAAE,IACP,wBAAIhB,UAAU,WAAW0G,EAAY1F,EAAE,KAAO,GAAG8F,kBACjD,wBAAI9G,UAAU,WAAW0G,EAAY1F,EAAE,KAAO,GAAG8F,yBCtDtD,IAAMC,EAAa,CAExB,CAAC,QAAS,WAAY,EAAM,QAC5B,CAAC,QAAS,WAAY,EAAM,QAC5B,CAAC,WAAY,OAAQ,IAAM,QAC3B,CAAC,QAAS,WAAY,IAAM,QAC5B,CAAC,kBAAmB,UAAW,IAAM,QACrC,CAAC,sCAAuC,UAAW,IAAM,QACzD,CAAC,QAAS,WAAY,GAAM,QAC5B,CAAC,WAAY,WAAY,IAAM,SAG3BC,EAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG7G,KAAI,SAAC8G,EAAInG,GAAL,qBAAmB,KAAK,EAAEA,GAAG,EAA7B,aAAmC,KAAK,EAAEA,GAAG,EAA7C,kBAAwDA,EAAE,EAAE,GAA5D,QAEvCoG,EAAe,GAEZ,SAASC,EAAgBhI,GAC9B,IAAImF,EAAWnF,EAAMmF,SAAS7B,OAAStD,EAAMmF,SAAW4C,EAkCxD,OAjCAA,EAAe5C,EAiCR,6BACL,8DACA,6BACA,4BAAQ3C,MAAOxC,EAAMiI,UAAWvF,SAAU1C,EAAMkI,aAC7CN,EAAW5G,KAAI,SAACmH,EAAGxG,GAAJ,OACd,4BAAQa,MAAOb,EAAGT,IAAKS,GAAIwG,EAAE,QAIjC,6BAAK,6BAEL,yBAAKtH,UAAU,mBAAmBC,MAAO,CAAC6B,WAAW,6EAErD,yBAAK9B,UAAU,QACZgH,EAAW7G,KAAI,SAACkB,EAAOP,GAAR,OACd,yBAAKd,UAAU,SAASK,IAAKS,IACzBgC,KAAKE,IAAI,EAAG+D,EAAW5H,EAAMiI,WAAW,GAAK,KAAQtG,EAAI,KAAMgF,QAAQ,OAG7E,yBAAK9F,UAAU,UAAUC,MAAO,CAACsH,UAAW,SAAU3B,MAAO,MAA7D,oBAKF,yBAAK5F,UAAU,WACZsE,EAASO,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEH,WAAW6C,MAAQzC,EAAEJ,WAAW6C,SAAQrH,KAAI,SAACsH,EAAI/E,GAAL,OACtE,0BAAM1C,UAAU,YAAYK,IAAKqC,GAC9BqE,EAAWlG,QAAO,SAAAyG,GAAC,OAAIG,EAAG9C,WAAW2C,EAAE,OAAKnH,KAAI,SAACmH,EAAG9F,GAAJ,OAC/C,0BAAMxB,UAAU,UAAUK,IAAKmB,EAAGvB,MAAO,CACvC6B,WAAYwF,EAAE,GACd3B,OAAQ8B,EAAG9C,WAAW2C,EAAE,IAAMG,EAAG9C,WAAWS,OAAS,IAErDQ,MAAO9C,KAAKG,IAAI,EAAG,IAAMqB,EAAS7B,oBCnFhD,IAAMiF,EAAW,SAACrG,GAAD,OAAW,0BAAMpB,MAAO,CAAE6B,WAAYT,MAExC,SAASsG,EAAUxI,GACjBA,EAAMmF,SAErB,OAAO,6BACL,oDACA,6BACA,4FACA,6BACA,uDACA,6BACA,wBAAItE,UAAU,aACZ,4BAAK0H,EAAS,UAAd,YACA,4BAAKA,EAAS,SAAd,oBACA,4BAAKA,EAAS,OAAd,UACA,4BAAKA,EAAS,QAAd,kBACA,4BAAKA,EAAS,UAAd,eACA,4BAAKA,EAAS,UAAd,kCClBS,SAASC,EAAUxI,GACjBA,EAAMmF,SAGrB,OAAO,6BACL,kDACA,6BACA,6ECPW,SAASqD,EAAUxI,GACjBA,EAAMmF,SAGrB,OAAO,6BACL,gEACA,6BACA,6ECPW,SAASsD,EAAWzI,GAClBA,EAAMmF,SAGrB,OAAO,6BACL,4DACA,6BACA,6F,eCgCiBuD,E,WAOjB,WAAY1H,EAAK2H,EAAOC,GAAQ,oBAC5BpI,KAAKQ,IAAMA,EACXR,KAAKmI,MAAQA,EACbnI,KAAKY,GAAKuH,EAAMvH,GAChBZ,KAAKqI,SAAWF,EAAMG,OACtBtI,KAAK+B,KAAOoG,EAAMpG,KAClB/B,KAAKuI,YAAcJ,EAAM,gBAErBC,EACAA,EAAM5H,EAAK2H,GACJ3H,GACPA,EAAIgI,SAASL,GAGjBnI,KAAKyI,WAAazI,KAAKyI,WAAW7I,KAAKI,M,qDAElCQ,GACHA,IAAQR,KAAKQ,MACfR,KAAKQ,IAAMA,EACXA,EAAIgI,SAASxI,KAAKmI,U,+BAIhBnI,KAAKQ,MACPR,KAAKQ,IAAIkI,YAAY1I,KAAKY,IAC1BZ,KAAKQ,IAAM,Q,iCAGJmI,EAASC,GAChB5I,KAAK6I,iBAAL,UAAyBD,EAAS,OAAS5I,KAAK+B,KAAKc,QAAQ,SAAU,QAAvE,YAA0F8F,K,+BAErFjH,GACL1B,KAAK6I,iBAAL,UAAyB7I,KAAK+B,KAA9B,UAA4CL,K,iCAG5C,OAAO1B,KAAK8I,iBAAL,UAAyB9I,KAAK+B,KAA9B,a,yCAEQiD,GACf,IAAK,IAAI5F,KAAQ4F,EACbhF,KAAK6I,iBAAiBzJ,EAAM4F,EAAW5F,M,sCAG/B2J,EAAWtJ,GACvBO,KAAKQ,IAAIwI,gBACL,CACIV,OAAQtI,KAAKqI,SACbE,YAAavI,KAAKuI,YAClB3H,GAAImI,GAERtJ,K,uCAGSL,EAAM4C,GACnBhC,KAAKQ,IAAIqI,iBAAiB7I,KAAKY,GAAIxB,EAAM4C,K,uCAE5B5C,GACb,OAAOY,KAAKQ,IAAIsI,iBAAiB9I,KAAKY,GAAIxB,K,sCAE9B2J,GACZ,OAAO/I,KAAKQ,IAAIyI,gBAAgB,CAC5BX,OAAQtI,KAAKqI,SACbE,YAAavI,KAAKuI,YAClB3H,GAAImI,M,iCAGDA,GAKP,OAJiB/I,KAAKQ,IAAI0I,oBAAoBlJ,KAAKqI,SAAU,CACzDE,YAAavI,KAAKuI,YAClBrH,OAAQ,CAAC,KAAM,CAAC,MAAO6H,KAEX,K,8CAGhB,OAAO/I,KAAKQ,IAAI2I,sBAAsB,KAAM,CAAEC,OAAQ,CAACpJ,KAAKY,Q,4CAG5D,OAAOZ,KAAKQ,IAAI0I,oBAAoBlJ,KAAKqI,SAAU,CAC/CE,YAAavI,KAAKuI,gB,oCAGZQ,GACV,OAAO/I,KAAKiJ,gBAAgBF,GAAWrH,Q,oCAE7B2H,EAAS1F,GACnB3D,KAAKgJ,gBAAgBK,EAAQzI,GAA7B,eACOyI,EAAQ5J,MADf,CAEIiC,MAAOiC,O,yBAGZ5B,GAAe,IAAC,IAAD,qBAANuH,EAAM,iCAANA,EAAM,mBACd,EAAAtJ,KAAKQ,KAAI+I,GAAT,SAAYxH,EAAM/B,KAAKY,IAAvB,OAA8B0I,M,0BAE9BvH,GAAe,IAAC,IAAD,qBAANuH,EAAM,iCAANA,EAAM,mBACf,EAAAtJ,KAAKQ,KAAIgJ,IAAT,SAAazH,EAAM/B,KAAKY,IAAxB,OAA+B0I,M,wCAEjBG,GAAW,IAAD,OACxB,GAAIzJ,KAAKQ,IAAIkJ,eAAe1J,KAAKqI,UAC7B,OAAOoB,IAIXzJ,KAAKQ,IAAI+I,GAAG,cAFI,SAAVI,IAAU,OACZF,GAAS,kBAAM,EAAKjJ,IAAIgJ,IAAI,aAAcG,a,KCxFzCC,EAAb,kDACI,WAAYzB,EAAO0B,EAAQC,GAAkB,IAAD,8BACxC,cAAM3B,IAED0B,OAASA,EACd,EAAKE,gBAAkB,GACvB,EAAKD,gBAAkBA,EALiB,EADhD,uDAQgB,IAAD,OACP9J,KAAK+J,gBAAgBzE,SAAQ,SAAA+D,GACzB,IAAIW,EAAe,EAAK7B,MAAMc,gBAAgBI,EAAQzI,IACtD,EAAKuH,MAAMa,gBAAgBK,EAAQzI,GAAnC,eACOoJ,EADP,CAEIC,OAAO,QAGfjK,KAAK+J,gBAAkB,GACvB/J,KAAK8J,gBAAgB9J,KAAK+J,mBAjBlC,8BAmBYG,GAAW,IAAD,OACdlK,KAAK+J,gBAAkBG,EAClBlK,KAAKmK,kBACNnK,KAAK+J,gBAAgBzE,SAAQ,SAAA+D,GACzB,EAAKlB,MAAMa,gBAAgBK,EAAQzI,GAAnC,eACOyI,EAAQ5J,MADf,CAEIwK,OAAO,QAInBjK,KAAK8J,gBAAgB9J,KAAK+J,mBA7BlC,kCA+BgB1I,GACR,IAAM+I,EAWd,SAAmBC,EAAOR,GACtB,IAAMS,EAAY,CAACD,EAAM/D,EAAIuD,EAAQQ,EAAME,EAAIV,GAE/C,MAAO,CADW,CAACQ,EAAM/D,EAAIuD,EAAQQ,EAAME,EAAIV,GAC5BS,GAdHE,CAAUnJ,EAAEgJ,MAAOrK,KAAK6J,QAC9BK,EAAWlK,KAAKmI,MAAM3H,IAAI2I,sBAAsBiB,EAAK,CACvDhB,OAAQ,CAACpJ,KAAKmI,MAAMvH,MAEpBsJ,EAASpH,OAAS,IAClB9C,KAAKyK,WACLzK,KAAK0K,QAAQR,QAtCzB,GA5DA,WACI,WAAY/B,GAAQ,oBAChBnI,KAAKmI,MAAQA,EAEbnI,KAAK2K,eAAiB,KACtB3K,KAAKmK,kBAAmB,EAExBnK,KAAK4K,YAAc5K,KAAK4K,YAAYhL,KAAKI,MACzCA,KAAK6K,aAAe7K,KAAK6K,aAAajL,KAAKI,MAC3CA,KAAKyK,SAAWzK,KAAKyK,SAAS7K,KAAKI,MAT3C,uDAYoC,OAAxBA,KAAK2K,iBACL3K,KAAKmI,MAAMa,gBAAgBhJ,KAAK2K,eAAe/J,GAA/C,eACOZ,KAAK2K,eAAelL,MAD3B,CAEIwK,OAAO,KAEXjK,KAAK2K,eAAiB,QAjBlC,8BAoBYtB,GACJrJ,KAAK2K,eAAiBtB,EACjBrJ,KAAKmK,kBACNnK,KAAKmI,MAAMa,gBAAgBK,EAAQzI,GAAnC,eACOyI,EAAQ5J,MADf,CAEIwK,OAAO,OAzBvB,kCA6BgB5I,GACJA,EAAE6I,SAASpH,OAAS,IACpB9C,KAAKyK,WACLzK,KAAK0K,QAAQrJ,EAAE6I,SAAS,OAhCpC,qCAoCQlK,KAAKyK,aApCb,+BAsCaK,GACDA,EACA9K,KAAKmK,kBAAmB,GAG5BnK,KAAKmI,MAAMoB,GAAG,YAAavJ,KAAK4K,aAChC5K,KAAKmI,MAAMoB,GAAG,aAAcvJ,KAAK6K,cACjC7K,KAAKmI,MAAMoB,GAAG,YAAavJ,KAAK4K,aAChC5K,KAAKmI,MAAMoB,GAAG,WAAYvJ,KAAK6K,iBA9CvC,iCAgDeC,GACHA,EACA9K,KAAKmK,kBAAmB,GAG5BnK,KAAKmI,MAAMqB,IAAI,YAAaxJ,KAAK4K,aACjC5K,KAAKmI,MAAMqB,IAAI,aAAcxJ,KAAK6K,cAClC7K,KAAKmI,MAAMqB,IAAI,YAAaxJ,KAAK4K,aACjC5K,KAAKmI,MAAMqB,IAAI,WAAYxJ,KAAK6K,mBAxDxC,MC8BAE,OAAOC,SAASC,YAAc,+FAE9B,IAAIxH,EAAQ,CACV,CAAC7C,GAAG,EAAEc,MAAM,WACZ,CAACd,GAAG,EAAEc,MAAM,WACZ,CAACd,GAAG,EAAEc,MAAM,YAEd+B,EAAM6B,SAAQ,SAAA3B,GACZA,EAAKI,WAAatB,EAAqBkB,EAAKjC,OAAQ,O,IAGjCwJ,E,kDACnB,WAAa1L,GAAQ,IAAD,8BAClB,gBAEKC,MAAQ,CACX0L,WAAW,EAEXC,kBAAmB,EACnBC,iBAAkB,GAClBC,WAAY,GACZC,YAAa,GACbC,aAAc,GAEdvE,iBAAkB,EAClBQ,UAAW,GAbK,E,gEAiBC,IAAD,OACdgE,EAAgB,CAClBC,GAAI,CACFC,OAAQ,EAAE,KAAM,YAChBC,KAAM,MAIV5L,KAAKQ,IAAM,IAAIuK,OAAOC,SAASE,IAAI,CACjCW,UAAW7L,KAAK8L,KAAKtL,IACrBF,MAAO,mCACPqL,OAAQF,EAAcC,GAAGC,OACzBC,KAAMH,EAAcC,GAAGE,KACvBG,oBAAoB,EACpBC,iBAAiB,EAEjBC,SAAS,EACTC,iBAAiB,IAGnBlM,KAAKQ,IAAI+I,GAAG,QAAQ,WAClB,IAAI4C,EAAW,IAAIpB,OAAOqB,eAAe,CACvCnB,YAAaF,OAAOC,SAASC,YAC7BoB,OAAQ,CACN3K,MAAO,UAETsJ,SAAUD,OAAOC,WAEnB,EAAKxK,IAAI8L,WAAWH,EAAU,YAE9B,EAAK3L,IAAI8L,WAAW,IAAIvB,OAAOC,SAASuB,mBAmBxCC,MAAM,kDAAkDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAACG,GACpF,EAAKpM,IAAIqM,UAAU,YAAa,CAC9B9K,KAAM,UACN+K,KAAMF,IAER,IAAI1E,EAAM,EAAK1H,IAAK,CAClBI,GAAI,YACJ0H,OAAQ,YACRvG,KAAM,OACNgL,MAAO,CACL,aAAc,OACd,aAAc,UAMpB,EAAKvM,IAAIqM,UAAU,YAAa,CAC9B9K,KAAM,SACNiL,IAAK,oCAEP,IAAIC,EAAkB,IAAI/E,EAAM,KAAM,CACpCtH,GAAI,oBACJ0H,OAAQ,YACR,eAAgB,eAChBvG,KAAM,OACNgL,MAAO,CACL,aAAc,UACd,aAAc,CAAC,cAAe,CAAC,UAAW,CAAC,QAAS,EAAG,EAAG,EAAG,GAC7D,eAAgB,MAGhBG,EAAgB,IAAIhF,EAAM,KAAM,CAClCtH,GAAI,YACJ0H,OAAQ,YACR,eAAgB,eAChBvG,KAAM,OACNgL,MAAO,CACL,aAAcvJ,EAAqBC,GACnC,eAAgB,MAGhB0J,EAAkB,IAAIvD,EACxBsD,EACA,GACA,EAAKpD,gBAAgBlK,KAAK,IAI5B,EAAKY,IAAIqM,UAAU,cAAe,CAChC9K,KAAM,SACNiL,IAAK,yCAEP,IAAII,EAAY,IAAIlF,EAAM,EAAK1H,IAAK,CAClCI,GAAI,sBACJ0H,OAAQ,cACR,eAAgB,oBAChBvG,KAAM,OACNgL,MAAO,CACL,aAAc,UACd,aAAc,CAAC,cAAe,CAAC,UAAW,CAAC,QAAS,EAAG,EAAG,EAAG,GAC7D,eAAgB,MAGhBM,EAAU,IAAInF,EAAM,EAAK1H,IAAK,CAChCI,GAAI,cACJ0H,OAAQ,cACR,eAAgB,oBAChBvG,KAAM,OACNgL,MAAO,CACL,aAAcvJ,EAAqBC,GACnC,eAAgB,MAGhB6J,EAAY,IAAI1D,EAClByD,EACA,GACA,EAAKvD,gBAAgBlK,KAAK,IAE5B0N,EAAUC,WAGVf,MAAM,4CAA4CC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAC7E,EAAKpM,IAAIqM,UAAU,SAAU,CAC3B9K,KAAM,UACN+K,KAAMF,IAER,EAAKnN,MAAM8L,YAAX,SAAqC,IAAIrD,EAAM,KAAM,CACnDtH,GAAI,SACJ0H,OAAQ,SACRvG,KAAM,SACNgL,MAAOxI,OAKXiI,MAAM,4CAA4CC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAC7E,EAAKpM,IAAIqM,UAAU,WAAY,CAC7B9K,KAAM,UACN+K,KAAMF,IAER,EAAKnN,MAAM8L,YAAX,SAAqC,IAAIrD,EAAM,KAAM,CACnDtH,GAAI,WACJ0H,OAAQ,WACRvG,KAAM,SACNgL,MAAO,CACL,gBAAiB,EACjB,eAAgB,aAMtBP,MAAM,6CAA6CC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAC9E,EAAKpM,IAAIqM,UAAU,YAAa,CAC9B9K,KAAM,UACN+K,KAAMF,IAER,EAAKnN,MAAM8L,YAAX,UAAsC,IAAIrD,EAAM,KAAM,CACpDtH,GAAI,YACJ0H,OAAQ,YACRvG,KAAM,SACNgL,MAAO,CACL,gBAAiB,EACjB,eAAgB,YAMtBP,MAAM,mCAAmCC,MAAK,SAAAC,GAAG,OAAIA,EAAIc,UAAQf,MAAK,SAAAgB,GACpE,IAAIC,EAAM,GACVD,EAAIpI,MAAM,MAAMC,SAAQ,SAACqI,GAGvB,IADAA,EAAMA,EAAItI,MAAM,MACRvC,OAAS,EAAG,CAClB,IAAI8K,EAA4B,EAAtBD,EAAIA,EAAI7K,OAAS,GACvB+K,EAA4B,EAAtBF,EAAIA,EAAI7K,OAAS,GAC3B4K,EAAII,KAAK,CACP/L,KAAM,UACNgM,SAAU,CACRhM,KAAM,QACNiM,YAAa,CAACH,EAAKD,UAK3B,EAAKpN,IAAIqM,UAAU,OAAQ,CACzB9K,KAAM,UACN+K,KAAM,CACJ/K,KAAM,oBACNmI,SAAUwD,KAGd,EAAKjO,MAAM8L,YAAY,YAAc,IAAIrD,EAAM,KAAM,CACnDtH,GAAI,OACJ0H,OAAQ,OACRvG,KAAM,SACNgL,MAAO,CACL,gBAAiB,EACjB,eAAgB,cAKtB,EAAK7M,SAAS,CACZmL,iBAAkB,cAClBC,WAAY,CACV2C,YAAaZ,EACba,mBAAoBd,EACpBe,mBAAoBb,EACpBc,UAAWlB,EACXmB,iBAAkBpB,EAClBqB,iBAAkBnB,GAEpBhC,WAAW,IAEb,EAAKoD,gB,sCAKOC,GACdxO,KAAKE,SAAS,CACZsL,aAAcgD,M,qCAIH3O,GACb,IZvJ2B4O,EAAQC,EYuJ7BC,EAAe9O,EACXA,EAAM0C,OAAOP,MACbhC,KAAKP,MAAMwH,iBACf2H,EAAc/H,EAAU8H,GAG9B3O,KAAKP,MAAM6L,WAAW8C,UAAUvF,iBAC9B,cZ9JyB4F,EY+JVG,EAAY,GZ/JMF,EY+JFE,EAAY,GZ9JxC,CACL,OACA,CAAC,IAAK,CAAC,MAAOH,GAAS,CAAC,MAAOC,IAC7B,CAAC,OACC,CAAC,KAAM,CAAC,gBAAiB,UAAU,GADrC,CAGM,cACA,CAAC,UACD,CAAC,IAAK,CAAC,MAAOD,GAAS,CAAC,IAAK,CAAC,MAAOA,GAAS,CAAC,MAAOC,MAL5D,mBAMSvK,IANT,CASM,cACA,CAAC,UACD,CAAC,IAAK,CAAC,MAAOsK,GAAS,CAAC,IAAK,CAAC,MAAOA,GAAS,CAAC,MAAOC,MAX5D,mBAYSvK,KAGT,CAAC,OACC,CAAC,KAAM,CAAC,gBAAiB,UAAU,GADrC,CAGM,cACA,CAAC,UACD,CAAC,IAAK,CAAC,MAAOuK,GAAS,CAAC,IAAK,CAAC,MAAOD,GAAS,CAAC,MAAOC,MAL5D,mBAMSvK,IANT,CASM,cACA,CAAC,UACD,CAAC,IAAK,CAAC,MAAOuK,GAAS,CAAC,IAAK,CAAC,MAAOD,GAAS,CAAC,MAAOC,MAX5D,mBAYSvK,QYmIXnE,KAAKE,SAAS,CAAE+G,iBAAkB0H,M,kCAGxB9O,GACV,IAAM8O,EAAe9O,EACXA,EAAM0C,OAAOP,MACbhC,KAAKP,MAAMgI,UACfoH,EAAWzH,EAAWuH,GAE5B3O,KAAKP,MAAM6L,WAAW2C,YAAYpF,iBAChC,aACAzE,EAAcyK,IAGhB7O,KAAKE,SAAS,CAAEuH,UAAWkH,M,iCAI3B3O,KAAKP,MAAM6L,WAAW2C,YAAYpF,iBAAiB,aAAc3E,GACjElE,KAAKP,MAAM6L,WAAW2C,YAAYpF,iBAAiB,eAAgB,M,oCAInE7I,KAAKP,MAAM6L,WAAW2C,YAAYpF,iBAAiB,aAAc5E,GACjEjE,KAAKP,MAAM6L,WAAW2C,YAAYpF,iBAAiB,eAAgB,M,oCAInE7I,KAAKP,MAAM6L,WAAW2C,YAAYpF,iBAAiB,aAAcvE,GACjEtE,KAAKP,MAAM6L,WAAW2C,YAAYpF,iBAAiB,eAAgB,M,kCAInE7I,KAAKP,MAAM6L,WAAW2C,YAAYpF,iBAChC,aACAzE,EAAcgD,EAAWpH,KAAKP,MAAMgI,aAEtCzH,KAAKP,MAAM6L,WAAW2C,YAAYpF,iBAAiB,eAAgB,M,kCAGzDiG,GACV,IAAIC,EAAc5P,EAAW2P,GAE0B,WAAnD3P,EAAWa,KAAKP,MAAM2L,mBAAmB/L,OAE3CW,KAAKP,MAAM8L,YAAYpM,EAAWa,KAAKP,MAAM2L,mBAAmBhM,MAAM4P,SAG9C,WAAtBD,EAAY1P,OAEdW,KAAKP,MAAM8L,YAAYwD,EAAY3P,MAAM6P,SAASjP,KAAKQ,KACvDR,KAAKE,SAAS,CACZkL,kBAAmB0D,KAEZC,EAAY1P,QAAUW,KAAKP,MAAM4L,iBAE1CrL,KAAKE,SAAS,CACZkL,kBAAmB0D,KAGrB9O,KAAKP,MAAM6L,WAAWtL,KAAKP,MAAM4L,iBAAmB,WAAW6D,aAC/DlP,KAAKP,MAAM6L,WAAWtL,KAAKP,MAAM4L,kBAAkB2D,SACnDhP,KAAKP,MAAM6L,WAAWtL,KAAKP,MAAM4L,iBAAmB,WAAW2D,SAE/DhP,KAAKP,MAAM6L,WAAWyD,EAAY1P,OAAO4P,SAASjP,KAAKQ,KACvDR,KAAKP,MAAM6L,WAAWyD,EAAY1P,MAAQ,WAAW4P,SAASjP,KAAKQ,KACnER,KAAKP,MAAM6L,WAAWyD,EAAY1P,MAAQ,WAAWkO,WAErDvN,KAAKE,SAAS,CACZmL,iBAAkB0D,EAAY1P,MAC9B+L,kBAAmB0D,KAIE,QAArBC,EAAY3P,KACdY,KAAKuO,WACyB,WAArBQ,EAAY3P,KACrBY,KAAKmP,cACyB,SAArBJ,EAAY3P,KACrBY,KAAKoP,YACyB,WAArBL,EAAY3P,KACrBY,KAAKqP,cACyB,cAArBN,EAAY3P,MACrBY,KAAKkH,mB,+BAKP,IAAIoI,EAAcnQ,EAAWa,KAAKP,MAAM2L,mBAAmBhM,KAE3D,OAAO,oCACL,yBAAKiB,UAAU,WACb,kBAAC,EAAD,CACED,YAAaJ,KAAKI,YAAYR,KAAKI,MACnCC,UAAWD,KAAKP,MAAM0L,aAG1B,yBAAK9K,UAAU,gBACb,kBAACmB,EAAD,MACA,yBAAKnB,UAAU,MAAMkP,IAAI,SAG3B,yBAAKlP,UAAU,UACb,yBAAKA,UAAU,WAAf,UACUL,KAAKP,MAAM4L,iBACnB,6BACiB,QAAhBiE,EAAwB,kBAAC9K,EAAD,CAAcG,SAAU3E,KAAKP,MAAM+L,eAAkB,KAC7D,WAAhB8D,EAA2B,kBAAClJ,EAAD,CAAiBzB,SAAU3E,KAAKP,MAAM+L,eAAkB,KACnE,WAAhB8D,EAA2B,kBAAC3I,EAAD,CAAchC,SAAU3E,KAAKP,MAAM+L,eAAkB,KAChE,cAAhB8D,EACC,kBAACxI,EAAD,CACEnC,SAAU3E,KAAKP,MAAM+L,aACrBvE,iBAAkBjH,KAAKP,MAAMwH,iBAC7BC,eAAgBlH,KAAKkH,eAAetH,KAAKI,QAEzC,KACa,SAAhBsP,EACC,kBAAC9H,EAAD,CACE7C,SAAU3E,KAAKP,MAAM+L,aACrB/D,UAAWzH,KAAKP,MAAMgI,UACtBC,YAAa1H,KAAK0H,YAAY9H,KAAKI,QAEnC,KACa,aAAhBsP,EAA6B,kBAACtH,EAAD,CAAWrD,SAAU3E,KAAKP,MAAM+L,eAAkB,KAC/D,cAAhB8D,EAA8B,kBAAC,EAAD,CAAW3K,SAAU3E,KAAKP,MAAM+L,eAAkB,KAChE,aAAhB8D,EAA6B,kBAAC,EAAD,CAAW3K,SAAU3E,KAAKP,MAAM+L,eAAkB,KAC/D,aAAhB8D,EAA6B,kBAACrH,EAAD,CAAYtD,SAAU3E,KAAKP,MAAM+L,eAAkB,Y,GAzY1DlK,IAAMC,WC1BxBiO,MAVf,WACE,OACE,yBAAKnP,UAAU,OACb,iCACE,kBAAC,EAAD,SCGYoP,QACW,cAA7B1E,OAAO2E,SAASC,UAEe,UAA7B5E,OAAO2E,SAASC,UAEhB5E,OAAO2E,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3D,MAAK,SAAA4D,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0ef81a29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\n\nexport const dataLayers = [\n  {\n    name: \"Age\",\n    units: \"blockgroups\",\n    menu: 0\n  },\n  {\n    name: \"Income\",\n    units: \"blockgroups\",\n    menu: 0\n  },\n  {\n    name: \"Race\",\n    units: \"blockgroups\",\n    menu: 0\n  },\n  {\n    name: \"Rental\",\n    units: \"blockgroups\",\n    menu: 0\n  },\n  {\n    name: \"Elections\",\n    units: \"precincts\",\n    menu: 2\n  },\n  {\n    name: \"Emitters\",\n    units: \"points\",\n    menu: 1\n  },\n  {\n    name: \"Coal Ash\",\n    units: \"points\",\n    menu: 1\n  },\n  // {\n  //   name: \"Food\",\n  //   units: \"tracts\"\n  // },\n  {\n    name: \"Colleges\",\n    units: \"points\",\n    menu: 1\n  },\n  {\n    name: \"Hospitals\",\n    units: \"points\",\n    menu: 1\n  }\n];\n\nexport class ChooseLayers extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      selectItem: 0\n    }\n\n    this.clickTest = this.clickTest.bind(this);\n  }\n\n  clickTest (event, label) {\n    event.preventDefault();\n    if (!this.props.disabled) {\n      this.setState({ selectItem: dataLayers.indexOf(label) });\n      this.props.switchLayer(dataLayers.indexOf(label));\n    }\n  }\n\n  render () {\n    return <nav className=\"navbar navbar-expand-lg\" style={{borderBottom: \"2px solid silver\"}}>\n      <ul className=\"navbar-nav mr-auto\">\n        {[\"Demographics\", \"Points\", \"Elections\"].map((menu, m) =>\n          <li className=\"nav-item dropdown\" key={m}>\n            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              {menu}\n            </a>\n            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n              {dataLayers.filter(label => (label.menu === m)).map((label, i) =>\n                <a key={i} className=\"dropdown-item\" href=\"#\" onClick={(e) => { this.clickTest(e, label) }}>\n                  {label.name}\n                </a>\n              )}\n            </div>\n          </li>\n        )}\n      </ul>\n    </nav>\n  }\n}\n","import React from 'react'\n\nfunction addNewColorButton(colors, onInput) {\n    const nextColor = colors.find(color => color.visible === false);\n    const onClick = () => {\n        nextColor.visible = true;\n        onInput({ target: { value: nextColor.id } });\n    };\n    if (!nextColor) {\n        return \"\";\n    }\n    return <button\n        className=\"icon-list__item subtle-button\"\n        onClick={onClick}\n        title=\"Add another color\"\n    >\n        <i className=\"material-icons\">\n            add\n        </i>\n    </button>\n}\n\nexport default function Paintbrush(props) {\n  let colors = [{color:\"#f00\", visible:true,displayNumber:1,id:0},\n    {color:\"#00f\", visible:true,displayNumber:2,id:1}]\n\n  return <div className=\"ui-option\">\n        <ol className=\"icon-list color-list\">\n            {colors.filter(color => color.visible)\n                  .map((color, k) =>\n                    <li\n                        className=\"icon-list__item color-list__item\"\n                        title={color.displayNumber}\n                        key={k}\n                    >\n                        <input\n                            type=\"radio\"\n                            id={\"brush-color__\" + color.id}\n                            name=\"brush-color\"\n                            value={color.id}\n                            checked={true}\n                            onChange={null}\n                        />\n                        <div\n                            className=\"icon-list__item__radio\"\n                            style={{background: color.color}}\n                        ></div>\n                    </li>\n            )}\n            {addNewColorButton(colors, () => {})}\n        </ol>\n    </div>\n}\n","export function changeColorLuminance(hex, lum) {\n    // validate hex string\n    hex = String(hex).replace(/[^0-9a-f]/gi, \"\");\n    if (hex.length < 6) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    lum = lum || 0;\n\n    // convert to decimal and change luminosity\n    let rgb = \"#\",\n        c,\n        i;\n    for (i = 0; i < 3; i++) {\n        c = parseInt(hex.substr(i * 2, 2), 16);\n        c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n        rgb += (\"00\" + c).substr(c.length);\n    }\n\n    return rgb;\n}\n\nexport function getUnitColorProperty(parts) {\n    const unitColorStyle = [\n        \"match\",\n        [\"feature-state\", \"color\"],\n        ...parts\n            .map(part => [part.id, part.color])\n            .reduce((list, pair) => [...list, ...pair]),\n        \"rgba(0, 0, 0, 0)\"\n    ];\n\n    const hoveredUnitColorStyle = [\n        \"match\",\n        [\"feature-state\", \"color\"],\n        ...parts\n            .map(part => [part.id, part.hoverColor])\n            .reduce((list, pair) => [...list, ...pair]),\n        \"#aaaaaa\"\n    ];\n\n    const unitColorProperty = [\n        \"case\",\n        [\"boolean\", [\"feature-state\", \"hover\"], false],\n        hoveredUnitColorStyle,\n        unitColorStyle\n    ];\n\n    return unitColorProperty;\n}\n\nfunction colorAndHoverAlt(hex) {\n  return [\n    \"case\",\n    [\"==\", [\"feature-state\", \"hover\"], true],\n    changeColorLuminance(hex, -0.3),\n    hex\n  ]\n}\n\nexport const incomeColors = [\"case\",\n  [\"<\", [\"get\", \"B19013_001\"], 30000],\n  colorAndHoverAlt(\"#edf8fb\"),\n  [\"<\", [\"get\", \"B19013_001\"], 60000],\n  colorAndHoverAlt(\"#ccece6\"),\n  [\"<\", [\"get\", \"B19013_001\"], 90000],\n  colorAndHoverAlt(\"#99d8c9\"),\n  [\"<\", [\"get\", \"B19013_001\"], 120000],\n  colorAndHoverAlt(\"#66c2a4\"),\n  [\"<\", [\"get\", \"B19013_001\"], 150000],\n  colorAndHoverAlt(\"#2ca25f\"),\n  colorAndHoverAlt(\"#006d2c\")\n]\n\nexport const ageColors = [\"case\",\n  [\"<\", [\"get\", \"B01002_001\"], 20],\n  colorAndHoverAlt(\"#edf8fb\"),\n  [\"<\", [\"get\", \"B01002_001\"], 35],\n  colorAndHoverAlt(\"#ccece6\"),\n  [\"<\", [\"get\", \"B01002_001\"], 50],\n  colorAndHoverAlt(\"#99d8c9\"),\n  [\"<\", [\"get\", \"B01002_001\"], 65],\n  colorAndHoverAlt(\"#66c2a4\"),\n  [\"<\", [\"get\", \"B01002_001\"], 80],\n  colorAndHoverAlt(\"#2ca25f\"),\n  colorAndHoverAlt(\"#006d2c\"),\n]\n\nconst partyRGBColors = {\n  Democratic: [\n    0, \"rgba(0,0,0,0)\",\n    0.499, \"rgba(0,0,0,0)\",\n    0.5, \"rgba(249,249,249,0)\",\n    1, \"rgb(25, 118, 210)\" // 0x1976d2\n  ],\n  Democratic_hover: [\n    0, \"rgba(0,0,0,0)\",\n    0.499, \"rgba(0,0,0,0)\",\n    0.5, \"rgba(174,174,174,0.5)\",\n    1, \"rgb(18, 83, 147)\"\n  ],\n  Republican: [\n    0, \"rgba(0,0,0,0)\",\n    0.499, \"rgba(0,0,0,0)\",\n    0.5, \"rgba(249,249,249,0)\",\n    1, \"rgb(211, 47, 47)\" // 0xd32f2f\n  ],\n  Republican_hover: [\n    0, \"rgba(0,0,0,0)\",\n    0.499, \"rgba(0,0,0,0)\",\n    0.5, \"rgba(174,174,174,0.5)\",\n    1, \"rgb(148, 33, 33)\"\n  ],\n};\n\nexport function densityColors(demoGroup) {\n  return [\"case\",\n    [\"==\", [\"get\", \"TOTPOP\"], 0],\n      \"#ccc\", // no data\n      [\n        \"interpolate\",\n        [\"linear\"],\n        [\"/\", [\"get\", demoGroup[1]], [\"get\", \"TOTPOP\"]],\n        0,\n        [\"case\",\n          [\"==\", [\"feature-state\", \"hover\"], true],\n          \"rgba(140, 140, 179, 0)\",\n          \"rgba(200, 200, 255, 0)\",\n        ],\n        (demoGroup[2] + 0.01),\n        [\"case\",\n          [\"==\", [\"feature-state\", \"hover\"], true],\n          \"rgba(0, 0, 179, 0.6)\",\n          \"rgba(0, 0, 255, 0.6)\",\n        ],\n      ]\n  ]\n}\n\nexport const rentalColors = [\n  \"case\",\n  [\"==\", [\"+\", [\"get\", \"B25003_002\"], [\"get\", \"B25003_003\"]], 0], \"#ccc\", // no houses\n  [\">\", [\"/\", [\"get\", \"B25003_003\"], [\"+\", [\"get\", \"B25003_002\"], [\"get\", \"B25003_003\"]]], 0.5],\n    \"orange\", // > 50% rent\n  \"darkblue\" // 0-50% rent\n]\n\nexport function electionColors(demKey, repKey) {\n  return [\n    \"case\",\n    [\">\", [\"get\", demKey], [\"get\", repKey]],\n      [\"case\",\n        [\"==\", [\"feature-state\", \"hover\"], true],\n        [\n            \"interpolate\",\n            [\"linear\"],\n            [\"/\", [\"get\", demKey], [\"+\", [\"get\", demKey], [\"get\", repKey]]],\n            ...partyRGBColors[\"Democratic_hover\"],\n        ],\n        [\n            \"interpolate\",\n            [\"linear\"],\n            [\"/\", [\"get\", demKey], [\"+\", [\"get\", demKey], [\"get\", repKey]]],\n            ...partyRGBColors[\"Democratic\"],\n        ]\n      ],\n      [\"case\",\n        [\"==\", [\"feature-state\", \"hover\"], true],\n        [\n            \"interpolate\",\n            [\"linear\"],\n            [\"/\", [\"get\", repKey], [\"+\", [\"get\", demKey], [\"get\", repKey]]],\n            ...partyRGBColors[\"Republican_hover\"],\n        ],\n        [\n            \"interpolate\",\n            [\"linear\"],\n            [\"/\", [\"get\", repKey], [\"+\", [\"get\", demKey], [\"get\", repKey]]],\n            ...partyRGBColors[\"Republican\"],\n        ]\n      ]\n  ]\n}\n\nexport const enviroPaint = {\n  'circle-radius': 4,\n  'circle-color': [\n    'match',\n    ['get', 'CLASS_STATUS'],\n    'Title V', 'purple',\n    'Synthetic Minor', 'green',\n    'Small', 'red',\n    'Permit Exempt', 'blue',\n    'Registered', 'orange',\n    'Permit/Registration Pending', 'yellow',\n    '#ccc' // other\n  ]\n}\n","import React from 'react'\n\nimport {\n  ageColors\n} from '../colors'\n\nexport default function AgeHistogram(props) {\n  let totals = {},\n      keys = [],\n      selected = props.selected,\n      median_point = \"\",\n      median_age = 0,\n      col_max_height = 0\n\n  if (selected.length) {\n    keys = Object.keys(selected[0].properties)\n        .filter(p => p.indexOf(\"age_\") === 0)\n        .sort((a, b) => a.split(\"_\")[1].replace(\"lt\", \"0\") - b.split(\"_\")[1].replace(\"lt\", \"0\"))\n\n    keys.forEach(k => totals[k] = 0)\n\n    let tot_pop = 0;\n    selected.forEach((blockgroup) => {\n      keys.forEach(k => totals[k] += blockgroup.properties[k])\n      tot_pop += blockgroup.properties.TOTPOP\n      median_age += blockgroup.properties.TOTPOP * blockgroup.properties.B01002_001\n    })\n    median_age /= tot_pop\n\n    let median_pop = tot_pop / 2;\n    keys.forEach((k, kdex) => {\n      if (median_point === \"\") {\n        median_pop -= totals[k]\n        if (median_pop <= 0) {\n          median_point = kdex\n        }\n      }\n    })\n  }\n\n  let cols = keys.map(k => {\n    let age_range = k.replace(\"lt_5\", \"0_4\").replace(\"85_plu\", \"85_90\").split(\"_\"),\n        years = (age_range.length === 2) ? 1 : (age_range[2] - age_range[1] + 1),\n        height = totals[k] / years;\n    col_max_height = Math.max(col_max_height, height)\n    return { width: years * 6, height: height }\n  })\n\n  return <div>\n    <span>Layer: Median Age</span>\n    <div className=\"palette\">\n      {ageColors.filter(c => c[0] === \"case\").map((color, i) =>\n        <div className=\"square\" key={i} style={{background: color[3]}}>\n        </div>\n      )}\n    </div>\n    <div className=\"nums\">\n      {ageColors.filter(c => c[0] === \"<\").map((color, i) =>\n        <div className=\"square\" key={i}>\n          {i ? \"\" : \"< \"}\n          {color[2]}\n        </div>\n      )}\n      <div className=\"square\">\n        > {ageColors[ageColors.length - 3][2]}\n      </div>\n    </div>\n\n    <span>Source: US Census ACS (2018)</span>\n    <div className=\"histogram\">\n      {cols.map((c, kdex) => {\n        let is_median = (kdex === median_point);\n        return <div key={kdex} style={{\n          background: (is_median ? \"#888\" : \"#444\"),\n          width: c.width,\n          height: (c.height / col_max_height * 100)\n        }}>\n        </div>\n      })}\n    </div>\n    {cols.length\n      ? <div>\n        <small>Youngest to Oldest</small>\n        <br/>\n        <span>Median: {median_age ? median_age.toFixed(1) : \"N/A\"}</span>\n      </div>\n      : null\n    }\n  </div>\n}\n","import React from 'react'\n\nimport {\n  incomeColors\n} from '../colors'\n\nexport default function IncomeHistogram(props) {\n  let totals = [],\n      keys = [],\n      selected = props.selected,\n      median_point = \"\",\n      median_name = \"\",\n      col_max_height = 0\n\n  if (selected.length) {\n    keys = Object.keys(selected[0].properties)\n        .filter(p => p.indexOf(\"B19001_\") === 0)\n        .sort()\n\n    totals = keys.map(x => 0)\n\n    let tot_hh = 0;\n    selected.forEach((blockgroup) => {\n      keys.forEach((k, ind) => {\n        totals[ind] += blockgroup.properties[k]\n        tot_hh += blockgroup.properties[k]\n      })\n    })\n\n    let median_hh = tot_hh / 2;\n    totals.forEach((k, kdex) => {\n      col_max_height = Math.max(col_max_height, k)\n      if (median_point === \"\") {\n        median_hh -= k\n        if (median_hh <= 0) {\n          median_point = kdex\n          median_name = [\n            \"< 10k\",\n            \"10-15k\",\n            \"15-20k\",\n            \"20-25k\",\n            \"25-30k\",\n            \"30-35k\",\n            \"35-40k\",\n            \"40-45k\",\n            \"45-50k\",\n            \"50-60k\",\n            \"60-75k\",\n            \"75-100k\",\n            \"100-125k\",\n            \"125-150k\",\n            \"150-200k\",\n            \"> 200k\",\n          ][kdex]\n        }\n      }\n    })\n  }\n\n  return <div>\n    <span>Layer: Median Household Income</span>\n    <div className=\"palette\">\n      {incomeColors.filter(c => c[0] === \"case\").map((color, i) =>\n        <div className=\"square\" key={i} style={{background: color[3]}}>\n        </div>\n      )}\n    </div>\n    <div className=\"nums\">\n      {incomeColors.filter(c => c[0] === \"<\").map((color, i) =>\n        <div className=\"square\" key={i}>\n          {i ? \"\" : \"< \"}\n          {Math.floor(color[2] / 1000)}k\n        </div>\n      )}\n      <div className=\"square\">\n        > {Math.floor(incomeColors[incomeColors.length - 3][2] / 1000)}k\n      </div>\n    </div>\n\n    <span>Source: US Census ACS (2018)</span>\n    <div className=\"histogram\">\n      {totals.map((c, kdex) => {\n        let is_median = (kdex === median_point);\n        return <div key={kdex} style={{\n          background: (is_median ? \"#888\" : \"#444\"),\n          width: 24,\n          height: (c / col_max_height * 100)\n        }}>\n        </div>\n      })}\n    </div>\n    {totals.length\n      ? <div>\n        <small>Least to Most</small>\n        <br/>\n        {median_name ?\n          <span>Median: {median_name.replace(\"age_\", \"\").replace(\"_\", \" – \")}</span>\n          : null\n        }\n      </div>\n      : null\n    }\n  </div>\n}\n","import React from 'react'\n\nexport default function RentalLegend(props) {\n  let selected = props.selected;\n\n\n  return <div>\n    <span>Layer: Renter vs. Owner-occupied Households</span>\n    <br/>\n    <span>Source: US Census ACS (2018)</span>\n    <div className=\"palette\">\n      <div className=\"square\" style={{background:\"#ccc\",marginRight:8}}></div>\n      No Housing\n      <br/>\n      <div className=\"square\" style={{background:\"darkblue\",marginRight:8}}></div>\n      <span>{\"Renters <= 50%\"}</span>\n      <br/>\n      <div className=\"square\" style={{background:\"orange\",marginRight:8}}></div>\n      <span>{\"Renters > 50%\"}</span>\n    </div>\n  </div>\n}\n","import React from 'react'\n\nexport const elections = [\n  // year, position, DEM key, REP key\n  [2016, \"President\", \"EL16G_PR_D\", \"EL16G_PR_R\"],\n  [2016, \"Governor\", \"EL16G_GV_D\", \"EL16G_GV_R\"],\n  [2016, \"US Senate\", \"EL16G_US_1\", \"EL16G_USS_\"],\n  [2014, \"US Senate\", \"EL14G_US_1\", \"EL14G_USS_\"],\n  [2012, \"President\", \"EL12G_PR_D\", \"EL12G_PR_R\"],\n  [2012, \"Governor\", \"EL12G_GV_D\", \"EL12G_GV_R\"],\n  [2008, \"Governor\", \"EL08G_GV_D\", \"EL08G_GV_R\"],\n  [2008, \"US Senate\", \"EL08G_USS_\", \"EL08G_US_1\"],\n  [2010, \"US Senate\", \"EL10G_USS_\", \"EL10G_US_1\"]\n]\n\nexport function ElectionTable(props) {\n  let selected = props.selected,\n      total_votes = {}\n\n  if (selected.length) {\n    let keys = Object.keys(selected[0].properties)\n      .filter(p => p.indexOf(\"EL\") === 0)\n\n    keys.forEach(k => total_votes[k] = 0)\n\n    selected.forEach(precinct => {\n      keys.forEach(k => total_votes[k] += precinct.properties[k])\n    })\n  }\n\n  return <div>\n    <span>Layer: Vote Partisanship</span>\n    <p>Source: MGGG, North Carolina General Assembly, National Historic GIS (NHGIS)</p>\n    <br/>\n    <select value={props.selectedElection} onChange={props.changeElection}>\n      {elections.map((e, i) =>\n        <option key={i} value={i}>{e[0] + \" \" + e[1]}</option>\n      )}\n    </select>\n    <br/><br/>\n    <span>Two-party vote share</span>\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Year</th>\n          <th>Position</th>\n          <th>Democratic</th>\n          <th>Republican</th>\n        </tr>\n      </thead>\n      <tbody>\n        {elections.map((e, i) =>\n          <tr key={i}>\n            <td>{e[0]}</td>\n            <td>{e[1]}</td>\n            <td className=\"digits\">{(total_votes[e[2]] || 0).toLocaleString()}</td>\n            <td className=\"digits\">{(total_votes[e[3]] || 0).toLocaleString()}</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  </div>\n}\n","import React from 'react'\n\nexport const raceGroups = [\n  // display name, shapefile key, maximum % (0.01-1.00), graph color\n  ['White', 'NH_WHITE', 1.00, \"#f00\"],\n  ['Black', 'NH_BLACK', 1.00, \"#f0f\"],\n  ['Hispanic', 'HISP', 0.81, \"#00f\"],\n  ['Asian', 'NH_ASIAN', 0.65, \"#0f0\"],\n  ['American Indian', 'NH_AMIN', 0.93, \"#ff0\"],\n  ['Native Hawaiian or Pacific Islander', 'NH_NHPI', 0.02, \"#0ff\"],\n  ['Other', 'NH_OTHER', 0.20, \"#ccc\"],\n  ['2+ Races', 'NH_2MORE', 0.13, \"#ccc\"],\n]\n\nconst demoColors = [0,1,2,3,4,5,6,7,8].map((num,i) => `rgba(${200*(8-i)/8}, ${200*(8-i)/8}, 255, ${i/8*0.6})`)\n\nlet lastSelected = []\n\nexport function RaceDataBrowser(props) {\n  let selected = props.selected.length ? props.selected : lastSelected;\n  lastSelected = selected;\n\n  // try reducing to tracts\n  // let tracts = {};\n  // selected.forEach((bg) => {\n  //   let tract = bg.properties.GEOID.substring(0, bg.properties.GEOID.length - 1)\n  //   if (!tracts[tract]) {\n  //     tracts[tract] = {properties:{GEOID:tract,TOTPOP:bg.properties.TOTPOP}}\n  //     raceGroups.map((r, k) => {\n  //       tracts[tract].properties[r[1]] = bg.properties[r[1]]\n  //     })\n  //   } else {\n  //     tracts[tract].properties.TOTPOP += bg.properties.TOTPOP\n  //     raceGroups.map((r, k) => {\n  //       tracts[tract].properties[r[1]] += bg.properties[r[1]]\n  //     })\n  //   }\n  // });\n\n  // {Object.keys(tracts).sort().map((t0, c) => {\n  //   let bg = tracts[t0]\n  //   return <span className=\"color-col\" key={c}>\n  //     {raceGroups.filter(r => bg.properties[r[1]]).map((r, k) =>\n  //       <span className=\"segment\" key={k} style={{\n  //         background: r[3],\n  //         height: bg.properties[r[1]] / 100,\n  //         // bg.properties[r[1]] / bg.properties.TOTPOP * 100,\n  //         width: Math.max(1, 500 / Object.keys(tracts).length)\n  //       }}></span>\n  //     )}\n  //   </span>\n  // })}\n\n  return <div>\n    <span>Source: US Census ACS (2018)</span>\n    <br/>\n    <select value={props.focusRace} onChange={props.changeFocus}>\n      {raceGroups.map((r, i) =>\n        <option value={i} key={i}>{r[0]}</option>\n      )}\n    </select>\n\n    <br/><br/>\n\n    <div className=\"palette gradient\" style={{background:\"linear-gradient(to right, rgba(200, 200, 255, 0), rgba(0, 0, 255, 0.6))\"}}>\n    </div>\n    <div className=\"nums\">\n      {demoColors.map((color, i) =>\n        <div className=\"square\" key={i}>\n          {(Math.min(1, raceGroups[props.focusRace][2] + 0.01) * i / 0.08).toFixed(1)}\n        </div>\n      )}\n      <div className=\"palette\" style={{textAlign: \"center\", width: 330 }}>\n        % of blockgroup\n      </div>\n    </div>\n\n    <div className=\"popbars\">\n      {selected.sort((a, b) => (a.properties.GEOID - b.properties.GEOID)).map((bg, c) =>\n        <span className=\"color-col\" key={c}>\n          {raceGroups.filter(r => bg.properties[r[1]]).map((r, k) =>\n            <span className=\"segment\" key={k} style={{\n              background: r[3],\n              height: bg.properties[r[1]] / bg.properties.TOTPOP * 100,\n                // bg.properties[r[1]] / 50,\n              width: Math.max(1, 500 / selected.length)\n            }}></span>\n          )}\n        </span>\n      )}\n    </div>\n  </div>\n}\n","import React from 'react'\n\nconst colorDot = (color) => <span style={{ background: color }}></span>\n\nexport default function EnvLegend(props) {\n  let selected = props.selected;\n\n  return <div>\n    <span>Layer: Environment</span>\n    <br/>\n    <span>Source: North Carolina Department of Environmental Quality</span>\n    <br/>\n    <span>Environmental Map Key</span>\n    <br/>\n    <ul className=\"colorList\">\n      <li>{colorDot('purple')} Title V</li>\n      <li>{colorDot('green')} Synthetic Minor</li>\n      <li>{colorDot('red')} Small</li>\n      <li>{colorDot('blue')} Permit Exempt</li>\n      <li>{colorDot('orange')} Registered</li>\n      <li>{colorDot('yellow')} Permit/Registration Pending</li>\n    </ul>\n  </div>\n}\n","import React from 'react'\n\nexport default function EnvLegend(props) {\n  let selected = props.selected;\n\n\n  return <div>\n    <span>Layer: Hospitals</span>\n    <br/>\n    <span>Source: Homeland Infrastructure Foundation</span>\n\n  </div>\n}\n","import React from 'react'\n\nexport default function EnvLegend(props) {\n  let selected = props.selected;\n\n\n  return <div>\n    <span>Layer: Colleges & Universities</span>\n    <br/>\n    <span>Source: Homeland Infrastructure Foundation</span>\n\n  </div>\n}\n","import React from 'react'\n\nexport default function CoalLegend(props) {\n  let selected = props.selected;\n\n\n  return <div>\n    <span>Layer: Coal Ash Facilities</span>\n    <br/>\n    <span>Source: North Carolina Department of Environmental Quality</span>\n\n  </div>\n}\n","// The addBelowLabels method gives the right look on the Mapbox \"streets\" basemap,\r\n// while addBelowSymbols gives the right look on the \"light\" basemap.\r\n\r\n/**\r\n * Add the layer to the map below the first label layer (e.g. street names).\r\n * @param {mapboxgl.Map} map\r\n * @param {Layer} layer\r\n */\r\nexport function addBelowLabels(map, layer) {\r\n    const layers = map.getStyle().layers;\r\n    const firstSymbolId = getFirstLabelId(layers);\r\n    map.addLayer(layer, firstSymbolId);\r\n}\r\n\r\nexport function addBelowSymbols(map, layer) {\r\n    const layers = map.getStyle().layers;\r\n    const firstSymbolId = getFirstSymbolId(layers);\r\n    map.addLayer(layer, firstSymbolId);\r\n}\r\n\r\n/**\r\n * @param {Object[]} layers list of layers from the Mapbox map's style\r\n * @returns {string} id of the first id with \"label\" in the name\r\n */\r\nfunction getFirstLabelId(layers) {\r\n    for (let i = 0; i < layers.length; i++) {\r\n        if (layers[i].id.includes(\"label\")) {\r\n            return layers[i].id;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getFirstSymbolId(layers) {\r\n    for (let i = 0; i < layers.length; i++) {\r\n        if (layers[i].type === \"symbol\") {\r\n            return layers[i].id;\r\n        }\r\n    }\r\n}\r\n\r\n/** A layer on a Mapbox map. */\r\nexport default class Layer {\r\n    /**\r\n     * @param {mapboxgl.Map} map to add the layer to\r\n     * @param {Object} layer a Layer object obeying the Mapbox style specification\r\n     * @param {function} [adder] a function (map, layer) -> void that adds the layer\r\n     *  to the map.\r\n     */\r\n    constructor(map, layer, adder) {\r\n        this.map = map;\r\n        this.layer = layer;\r\n        this.id = layer.id;\r\n        this.sourceId = layer.source;\r\n        this.type = layer.type;\r\n        this.sourceLayer = layer[\"source-layer\"];\r\n\r\n        if (adder) {\r\n            adder(map, layer);\r\n        } else if (map) {\r\n            map.addLayer(layer);\r\n        }\r\n\r\n        this.getFeature = this.getFeature.bind(this);\r\n    }\r\n    addToMap(map) {\r\n      if (map && !this.map) {\r\n        this.map = map;\r\n        map.addLayer(this.layer);\r\n      }\r\n    }\r\n    remove() {\r\n      if (this.map) {\r\n        this.map.removeLayer(this.id);\r\n        this.map = null;\r\n      }\r\n    }\r\n    setOpacity(opacity, isText) {\r\n        this.setPaintProperty(`${isText ? \"text\" : this.type.replace(\"symbol\", \"icon\")}-opacity`, opacity);\r\n    }\r\n    setColor(color) {\r\n        this.setPaintProperty(`${this.type}-color`, color);\r\n    }\r\n    getColor() {\r\n        return this.getPaintProperty(`${this.type}-color`);\r\n    }\r\n    setPaintProperties(properties) {\r\n        for (let name in properties) {\r\n            this.setPaintProperty(name, properties[name]);\r\n        }\r\n    }\r\n    setFeatureState(featureId, state) {\r\n        this.map.setFeatureState(\r\n            {\r\n                source: this.sourceId,\r\n                sourceLayer: this.sourceLayer,\r\n                id: featureId\r\n            },\r\n            state\r\n        );\r\n    }\r\n    setPaintProperty(name, value) {\r\n        this.map.setPaintProperty(this.id, name, value);\r\n    }\r\n    getPaintProperty(name) {\r\n        return this.map.getPaintProperty(this.id, name);\r\n    }\r\n    getFeatureState(featureId) {\r\n        return this.map.getFeatureState({\r\n            source: this.sourceId,\r\n            sourceLayer: this.sourceLayer,\r\n            id: featureId\r\n        });\r\n    }\r\n    getFeature(featureId) {\r\n        const features = this.map.querySourceFeatures(this.sourceId, {\r\n            sourceLayer: this.sourceLayer,\r\n            filter: [\"==\", [\"id\"], featureId]\r\n        });\r\n        return features[0];\r\n    }\r\n    queryRenderedFeatures() {\r\n        return this.map.queryRenderedFeatures(null, { layers: [this.id] });\r\n    }\r\n    querySourceFeatures() {\r\n        return this.map.querySourceFeatures(this.sourceId, {\r\n            sourceLayer: this.sourceLayer\r\n        });\r\n    }\r\n    getAssignment(featureId) {\r\n        return this.getFeatureState(featureId).color;\r\n    }\r\n    setAssignment(feature, part) {\r\n        this.setFeatureState(feature.id, {\r\n            ...feature.state,\r\n            color: part\r\n        });\r\n    }\r\n    on(type, ...args) {\r\n        this.map.on(type, this.id, ...args);\r\n    }\r\n    off(type, ...args) {\r\n        this.map.off(type, this.id, ...args);\r\n    }\r\n    untilSourceLoaded(callback) {\r\n        if (this.map.isSourceLoaded(this.sourceId)) {\r\n            return callback();\r\n        }\r\n        const handler = () =>\r\n            callback(() => this.map.off(\"sourcedata\", handler));\r\n        this.map.on(\"sourcedata\", handler);\r\n    }\r\n}\r\n","export class Hover {\r\n    constructor(layer) {\r\n        this.layer = layer;\r\n\r\n        this.hoveredFeature = null;\r\n        this.deactivatedHover = false;\r\n\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onMouseLeave = this.onMouseLeave.bind(this);\r\n        this.hoverOff = this.hoverOff.bind(this);\r\n    }\r\n    hoverOff() {\r\n        if (this.hoveredFeature !== null) {\r\n            this.layer.setFeatureState(this.hoveredFeature.id, {\r\n                ...this.hoveredFeature.state,\r\n                hover: false\r\n            });\r\n            this.hoveredFeature = null;\r\n        }\r\n    }\r\n    hoverOn(feature) {\r\n        this.hoveredFeature = feature;\r\n        if (!this.deactivatedHover) {\r\n            this.layer.setFeatureState(feature.id, {\r\n                ...feature.state,\r\n                hover: true\r\n            });\r\n        }\r\n    }\r\n    onMouseMove(e) {\r\n        if (e.features.length > 0) {\r\n            this.hoverOff();\r\n            this.hoverOn(e.features[0]);\r\n        }\r\n    }\r\n    onMouseLeave() {\r\n        this.hoverOff();\r\n    }\r\n    activate(mouseover) {\r\n        if (mouseover) {\r\n            this.deactivatedHover = false;\r\n            return;\r\n        }\r\n        this.layer.on(\"mousemove\", this.onMouseMove);\r\n        this.layer.on(\"mouseleave\", this.onMouseLeave);\r\n        this.layer.on(\"touchmove\", this.onMouseMove);\r\n        this.layer.on(\"touchend\", this.onMouseLeave);\r\n    }\r\n    deactivate(mouseover) {\r\n        if (mouseover) {\r\n            this.deactivatedHover = true;\r\n            return;\r\n        }\r\n        this.layer.off(\"mousemove\", this.onMouseMove);\r\n        this.layer.off(\"mouseleave\", this.onMouseLeave);\r\n        this.layer.off(\"touchmove\", this.onMouseMove);\r\n        this.layer.off(\"touchend\", this.onMouseLeave);\r\n    }\r\n}\r\n\r\nexport class HoverWithRadius extends Hover {\r\n    constructor(layer, radius, setMapSelection) {\r\n        super(layer);\r\n\r\n        this.radius = radius;\r\n        this.hoveredFeatures = [];\r\n        this.setMapSelection = setMapSelection;\r\n    }\r\n    hoverOff() {\r\n        this.hoveredFeatures.forEach(feature => {\r\n            let featureState = this.layer.getFeatureState(feature.id);\r\n            this.layer.setFeatureState(feature.id, {\r\n                ...featureState,\r\n                hover: false\r\n            });\r\n        });\r\n        this.hoveredFeatures = [];\r\n        this.setMapSelection(this.hoveredFeatures);\r\n    }\r\n    hoverOn(features) {\r\n        this.hoveredFeatures = features;\r\n        if (!this.deactivatedHover) {\r\n            this.hoveredFeatures.forEach(feature => {\r\n                this.layer.setFeatureState(feature.id, {\r\n                    ...feature.state,\r\n                    hover: true\r\n                });\r\n            });\r\n        }\r\n        this.setMapSelection(this.hoveredFeatures);\r\n    }\r\n    onMouseMove(e) {\r\n        const box = boxAround(e.point, this.radius);\r\n        const features = this.layer.map.queryRenderedFeatures(box, {\r\n            layers: [this.layer.id]\r\n        });\r\n        if (features.length > 0) {\r\n            this.hoverOff();\r\n            this.hoverOn(features);\r\n        }\r\n    }\r\n}\r\n\r\nfunction boxAround(point, radius) {\r\n    const southwest = [point.x + radius, point.y + radius];\r\n    const northeast = [point.x - radius, point.y - radius];\r\n    return [northeast, southwest];\r\n}\r\n","import React from 'react'\n\n// UI components\nimport { dataLayers, ChooseLayers } from '../components/ChooseLayers'\nimport Paintbrush from '../components/Paintbrush'\n\nimport AgeHistogram from '../components/AgeHistogram'\nimport IncomeHistogram from '../components/IncomeHistogram'\nimport RentalLegend from '../components/RentalLegend'\nimport { elections, ElectionTable } from '../components/ElectionTable'\nimport { raceGroups, RaceDataBrowser } from '../components/RaceDataBrowser'\nimport EnvLegend from '../components/EnvLegend'\nimport MedLegend from '../components/MedLegend'\nimport UniLegend from '../components/UniLegend'\nimport CoalLegend from '../components/CoalLegend'\n\n// map management\nimport Layer from '../layers/Layer'\nimport { HoverWithRadius } from '../layers/Hover'\nimport {\n  changeColorLuminance,\n  getUnitColorProperty,\n  enviroPaint,\n  ageColors,\n  incomeColors,\n  electionColors,\n  densityColors,\n  rentalColors,\n} from '../colors'\n\nwindow.mapboxgl.accessToken = \"pk.eyJ1IjoiZGlzdHJpY3RyIiwiYSI6ImNqbjUzMTE5ZTBmcXgzcG81ZHBwMnFsOXYifQ.8HRRLKHEJA0AismGk2SX2g\";\n\nlet parts = [\n  {id:0,color:\"#0099cd\"},\n  {id:1,color:\"#ffca5d\"},\n  {id:2,color:\"#00cd99\"}\n];\nparts.forEach(part => {\n  part.hoverColor = changeColorLuminance(part.color, -0.3);\n});\n\nexport default class Map extends React.Component {\n  constructor (props) {\n    super()\n\n    this.state = {\n      mapLoaded: false,\n\n      currentColorLayer: 0,\n      currentUnitLayer: '',\n      unitLayers: {},\n      pointLayers: {},\n      mapSelection: [],\n\n      selectedElection: 0,\n      focusRace: 0,\n    }\n  }\n\n  componentDidMount() {\n    let state_configs = {\n      nc: {\n        center: [-80.1, 35.2154083],\n        zoom: 5.5\n      }\n    }\n\n    this.map = new window.mapboxgl.Map({\n      container: this.refs.map,\n      style: 'mapbox://styles/mapbox/light-v10',\n      center: state_configs.nc.center,\n      zoom: state_configs.nc.zoom,\n      attributionControl: false,\n      pitchWithRotate: false,\n      // preserveDrawingBuffer: true,\n      dragPan: true,\n      touchZoomRotate: true,\n    })\n\n    this.map.on('load', () => {\n      let geocoder = new window.MapboxGeocoder({\n        accessToken: window.mapboxgl.accessToken,\n        marker: {\n          color: 'orange'\n        },\n        mapboxgl: window.mapboxgl\n      })\n      this.map.addControl(geocoder, \"top-left\")\n\n      this.map.addControl(new window.mapboxgl.NavigationControl())\n\n      // NC state outline\n      // this.map.addSource('state_outline', {\n      //   type: \"vector\",\n      //   url: \"mapbox://mapbox.hist-pres-election-state\"\n      // })\n      // this.map.addLayer({\n      //   id: 'state_outline',\n      //   source: 'state_outline',\n      //   \"source-layer\": \"historical_pres_elections_state\",\n      //   type: 'line',\n      //   paint: {\n      //     'line-color': '#555',\n      //     'line-width': [\"case\", [\"==\", [\"get\", \"state_abbrev\"], \"NC\"], 1.5, 0]\n      //   }\n      // })\n\n      // NC congress outline\n      fetch(\"/nc-districts/nc-geo/current_districts.geojson\").then(res => res.json()).then((gj) => {\n        this.map.addSource('districts', {\n          type: \"geojson\",\n          data: gj\n        })\n        new Layer(this.map, {\n          id: 'districts',\n          source: 'districts',\n          type: 'line',\n          paint: {\n            'line-color': '#555',\n            'line-width': 1.5\n          }\n        })\n      })\n\n      // NC precincts\n      this.map.addSource('precincts', {\n        type: \"vector\",\n        url: \"mapbox://districtr.nc_precincts\"\n      })\n      let borderPrecincts = new Layer(null, {\n        id: 'precincts-borders',\n        source: 'precincts',\n        'source-layer': 'nc_precincts',\n        type: 'line',\n        paint: {\n          \"line-color\": \"#777777\",\n          \"line-width\": [\"interpolate\", [\"linear\"], [\"zoom\"], 0, 0, 7, 1],\n          \"line-opacity\": 0.3\n        }\n      })\n      let fillPrecincts = new Layer(null, { // don't add to map right now\n        id: 'precincts',\n        source: 'precincts',\n        'source-layer': 'nc_precincts',\n        type: 'fill',\n        paint: {\n          \"fill-color\": getUnitColorProperty(parts),\n          \"fill-opacity\": 0.8\n        }\n      })\n      let cursorPrecincts = new HoverWithRadius(\n        fillPrecincts,\n        20,\n        this.setMapSelection.bind(this)\n      )\n\n      // NC blockgroups\n      this.map.addSource('blockgroups', {\n        type: \"vector\",\n        url: \"mapbox://districtr.nc_bg_blockgroups\"\n      })\n      let borderBGs = new Layer(this.map, {\n        id: 'blockgroups-borders',\n        source: 'blockgroups',\n        'source-layer': 'nc_bg_blockgroups',\n        type: 'line',\n        paint: {\n          \"line-color\": \"#777777\",\n          \"line-width\": [\"interpolate\", [\"linear\"], [\"zoom\"], 0, 0, 7, 1],\n          \"line-opacity\": 0.3\n        }\n      })\n      let fillBGs = new Layer(this.map, {\n        id: 'blockgroups',\n        source: 'blockgroups',\n        'source-layer': 'nc_bg_blockgroups',\n        type: 'fill',\n        paint: {\n          \"fill-color\": getUnitColorProperty(parts),\n          \"fill-opacity\": 0.8\n        }\n      })\n      let cursorBGs = new HoverWithRadius(\n        fillBGs,\n        20,\n        this.setMapSelection.bind(this)\n      )\n      cursorBGs.activate()\n\n      // NC environment\n      fetch(\"/nc-districts/nc-geo/nc_industry.geojson\").then(res => res.json()).then(gj => {\n        this.map.addSource('enviro', {\n          type: \"geojson\",\n          data: gj\n        })\n        this.state.pointLayers[\"Emitters\"] = new Layer(null, {\n          id: 'enviro',\n          source: 'enviro',\n          type: 'circle',\n          paint: enviroPaint\n        })\n      })\n\n      // NC colleges\n      fetch(\"/nc-districts/nc-geo/nc_colleges.geojson\").then(res => res.json()).then(gj => {\n        this.map.addSource('colleges', {\n          type: \"geojson\",\n          data: gj\n        })\n        this.state.pointLayers[\"Colleges\"] = new Layer(null, {\n          id: 'colleges',\n          source: 'colleges',\n          type: 'circle',\n          paint: {\n            'circle-radius': 4,\n            'circle-color': 'blue'\n          }\n        })\n      })\n\n      // NC hospitals\n      fetch(\"/nc-districts/nc-geo/nc_hospitals.geojson\").then(res => res.json()).then(gj => {\n        this.map.addSource('hospitals', {\n          type: \"geojson\",\n          data: gj\n        })\n        this.state.pointLayers[\"Hospitals\"] = new Layer(null, {\n          id: 'hospitals',\n          source: 'hospitals',\n          type: 'circle',\n          paint: {\n            'circle-radius': 4,\n            'circle-color': 'red'\n          }\n        })\n      })\n\n      // NC coal\n      fetch(\"/nc-districts/nc-geo/nc-ccr.csv\").then(res => res.text()).then(txt => {\n        let gjf = []\n        txt.split(\"\\n\").forEach((row) => {\n          // console.log(row.split(\",\"))\n          row = row.split(\",\")\n          if (row.length > 1) {\n            let lat = row[row.length - 2] * 1,\n                lng = row[row.length - 1] * 1\n            gjf.push({\n              type: \"Feature\",\n              geometry: {\n                type: \"Point\",\n                coordinates: [lng, lat]\n              }\n            })\n          }\n        })\n        this.map.addSource('coal', {\n          type: \"geojson\",\n          data: {\n            type: \"FeatureCollection\",\n            features: gjf\n          }\n        })\n        this.state.pointLayers[\"Coal Ash\"] = new Layer(null, {\n          id: 'coal',\n          source: 'coal',\n          type: 'circle',\n          paint: {\n            'circle-radius': 4,\n            'circle-color': 'black'\n          }\n        })\n      })\n\n      this.setState({\n        currentUnitLayer: 'blockgroups',\n        unitLayers: {\n          blockgroups: fillBGs,\n          blockgroups_border: borderBGs,\n          blockgroups_cursor: cursorBGs,\n          precincts: fillPrecincts,\n          precincts_border: borderPrecincts,\n          precincts_cursor: cursorPrecincts\n        },\n        mapLoaded: true\n      })\n      this.paintAge()\n\n    })\n  }\n\n  setMapSelection(items) {\n    this.setState({\n      mapSelection: items\n    })\n  }\n\n  changeElection(event) {\n    const newSelection = event\n            ? event.target.value\n            : this.state.selectedElection,\n          newElection = elections[newSelection];\n\n    // also need feature to trigger this when elections are first loaded\n    this.state.unitLayers.precincts.setPaintProperty(\n      \"fill-color\",\n      electionColors(newElection[2], newElection[3])\n    )\n\n    this.setState({ selectedElection: newSelection })\n  }\n\n  changeFocus(event) {\n    const newSelection = event\n            ? event.target.value\n            : this.state.focusRace,\n          newFocus = raceGroups[newSelection];\n\n    this.state.unitLayers.blockgroups.setPaintProperty(\n      \"fill-color\",\n      densityColors(newFocus)\n    )\n\n    this.setState({ focusRace: newSelection })\n  }\n\n  paintAge() {\n    this.state.unitLayers.blockgroups.setPaintProperty(\"fill-color\", ageColors)\n    this.state.unitLayers.blockgroups.setPaintProperty(\"fill-opacity\", 0.4)\n  }\n\n  paintIncome() {\n    this.state.unitLayers.blockgroups.setPaintProperty(\"fill-color\", incomeColors)\n    this.state.unitLayers.blockgroups.setPaintProperty(\"fill-opacity\", 0.4)\n  }\n\n  paintRental() {\n    this.state.unitLayers.blockgroups.setPaintProperty(\"fill-color\", rentalColors)\n    this.state.unitLayers.blockgroups.setPaintProperty(\"fill-opacity\", 0.4)\n  }\n\n  paintRace() {\n    this.state.unitLayers.blockgroups.setPaintProperty(\n      \"fill-color\",\n      densityColors(raceGroups[this.state.focusRace])\n    )\n    this.state.unitLayers.blockgroups.setPaintProperty(\"fill-opacity\", 0.6)\n  }\n\n  switchLayer(layer_id) {\n    let selectLayer = dataLayers[layer_id];\n\n    if (dataLayers[this.state.currentColorLayer].units === \"points\") {\n      // remove current point layer\n      this.state.pointLayers[dataLayers[this.state.currentColorLayer].name].remove()\n    }\n\n    if (selectLayer.units === \"points\") {\n      // points file\n      this.state.pointLayers[selectLayer.name].addToMap(this.map)\n      this.setState({\n        currentColorLayer: layer_id\n      })\n    } else if (selectLayer.units === this.state.currentUnitLayer) {\n      // same units\n      this.setState({\n        currentColorLayer: layer_id\n      })\n    } else {\n      this.state.unitLayers[this.state.currentUnitLayer + \"_cursor\"].deactivate()\n      this.state.unitLayers[this.state.currentUnitLayer].remove()\n      this.state.unitLayers[this.state.currentUnitLayer + \"_border\"].remove()\n\n      this.state.unitLayers[selectLayer.units].addToMap(this.map)\n      this.state.unitLayers[selectLayer.units + \"_border\"].addToMap(this.map)\n      this.state.unitLayers[selectLayer.units + \"_cursor\"].activate()\n\n      this.setState({\n        currentUnitLayer: selectLayer.units,\n        currentColorLayer: layer_id\n      })\n    }\n\n    if (selectLayer.name === \"Age\") {\n      this.paintAge()\n    } else if (selectLayer.name === \"Income\") {\n      this.paintIncome()\n    } else if (selectLayer.name === \"Race\") {\n      this.paintRace()\n    } else if (selectLayer.name === \"Rental\") {\n      this.paintRental()\n    } else if (selectLayer.name === \"Elections\") {\n      this.changeElection()\n    }\n  }\n\n  render() {\n    let activeLayer = dataLayers[this.state.currentColorLayer].name;\n\n    return <>\n      <div className=\"options\">\n        <ChooseLayers\n          switchLayer={this.switchLayer.bind(this)}\n          disabled={!this.state.mapLoaded}\n        />\n      </div>\n      <div className=\"mapContainer\">\n        <Paintbrush/>\n        <div className=\"map\" ref=\"map\">\n        </div>\n      </div>\n      <div className=\"legend\">\n        <div className=\"outputs\">\n          Units: {this.state.currentUnitLayer}\n          <br/>\n          {activeLayer === \"Age\" ? <AgeHistogram selected={this.state.mapSelection}/> : null}\n          {activeLayer === \"Income\" ? <IncomeHistogram selected={this.state.mapSelection}/> : null}\n          {activeLayer === \"Rental\" ? <RentalLegend selected={this.state.mapSelection}/> : null}\n          {activeLayer === \"Elections\" ?\n            <ElectionTable\n              selected={this.state.mapSelection}\n              selectedElection={this.state.selectedElection}\n              changeElection={this.changeElection.bind(this)}\n              />\n            : null}\n          {activeLayer === \"Race\" ?\n            <RaceDataBrowser\n              selected={this.state.mapSelection}\n              focusRace={this.state.focusRace}\n              changeFocus={this.changeFocus.bind(this)}\n              />\n            : null}\n          {activeLayer === \"Emitters\" ? <EnvLegend selected={this.state.mapSelection}/> : null}\n          {activeLayer === \"Hospitals\" ? <MedLegend selected={this.state.mapSelection}/> : null}\n          {activeLayer === \"Colleges\" ? <UniLegend selected={this.state.mapSelection}/> : null}\n          {activeLayer === \"Coal Ash\" ? <CoalLegend selected={this.state.mapSelection}/> : null}\n        </div>\n      </div>\n    </>\n  }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Map from './pages/Map';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <section>\n        <Map/>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}