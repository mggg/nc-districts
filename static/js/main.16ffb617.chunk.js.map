{"version":3,"sources":["logo.svg","components/ChooseLayers.js","components/AgeHistogram.js","components/IncomeHistogram.js","components/ElectionTable.js","components/EnvLegend.js","components/MedLegend.js","components/UniLegend.js","layers/Layer.js","layers/Hover.js","colors.js","pages/Map.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ChooseLayers","props","state","selectItem","clickTest","bind","event","index","preventDefault","this","disabled","setState","switchLayer","className","labels","map","label","i","key","href","onClick","e","name","React","Component","AgeHistogram","totals","keys","selected","median_point","median_name","col_max_height","length","Object","properties","filter","p","indexOf","sort","a","b","split","replace","forEach","k","tot_pop","blockgroup","TOTPOP","median_pop","kdex","cols","age_range","years","height","Math","max","width","c","is_median","style","background","IncomeHistogram","x","tot_hh","ind","median_hh","elections","ElectionTable","total_votes","precinct","value","selectedElection","onChange","changeElection","toLocaleString","colorDot","color","EnvLegend","Layer","layer","adder","id","sourceId","source","type","sourceLayer","addLayer","getFeature","removeLayer","opacity","isText","setPaintProperty","getPaintProperty","featureId","setFeatureState","getFeatureState","querySourceFeatures","queryRenderedFeatures","layers","feature","part","args","on","off","callback","isSourceLoaded","handler","HoverWithRadius","radius","setMapSelection","hoveredFeatures","featureState","hover","features","deactivatedHover","box","point","southwest","y","boxAround","hoverOff","hoverOn","hoveredFeature","onMouseMove","onMouseLeave","mouseover","getUnitColorProperty","parts","unitColorStyle","reduce","list","pair","hoverColor","window","mapboxgl","accessToken","dataLayers","units","hex","lum","String","rgb","parseInt","substr","round","min","toString","changeColorLuminance","Map","mapLoaded","currentColorLayer","currentUnitLayer","unitLayers","pointLayers","mapSelection","state_configs","nc","center","zoom","container","refs","attributionControl","pitchWithRotate","dragPan","touchZoomRotate","geocoder","MapboxGeocoder","marker","addControl","NavigationControl","addSource","url","paint","borderPrecincts","fillPrecincts","cursorPrecincts","borderBGs","fillBGs","cursorBGs","activate","fetch","then","res","json","gj","data","blockgroups","blockgroups_border","blockgroups_cursor","precincts","precincts_border","precincts_cursor","items","newSelection","target","newElection","partyRGBColors","layer_id","selectLayer","remove","addToMap","deactivate","activeLayer","ref","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.16ffb617.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\n\nexport default class ChooseLayers extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      selectItem: 0\n    }\n\n    this.clickTest = this.clickTest.bind(this);\n  }\n\n  clickTest (event, index) {\n    event.preventDefault();\n    if (!this.props.disabled) {\n      this.setState({ selectItem: index });\n      this.props.switchLayer(index);\n    }\n  }\n\n  render () {\n    return <ul className=\"nav nav-pills\">\n      {this.props.labels.map((label, i) =>\n        <li className=\"nav-item\" key={i}>\n          <a\n            className={\"nav-link \" +\n              ((i === this.state.selectItem) ? \"active\" : \"\")}\n            href=\"#\"\n            onClick={(e) => { this.clickTest(e, i) }}\n          >\n            {label.name}\n          </a>\n        </li>)\n      }\n    </ul>\n  }\n}\n","import React from 'react'\n\nexport default function AgeHistogram(props) {\n  let totals = {},\n      keys = [],\n      selected = props.selected,\n      median_point = \"\",\n      median_name = \"\",\n      col_max_height = 0\n\n  if (selected.length) {\n    keys = Object.keys(selected[0].properties)\n        .filter(p => p.indexOf(\"age_\") === 0)\n        .sort((a, b) => a.split(\"_\")[1].replace(\"lt\", \"0\") - b.split(\"_\")[1].replace(\"lt\", \"0\"))\n\n    keys.forEach(k => totals[k] = 0)\n\n    let tot_pop = 0;\n    selected.forEach((blockgroup) => {\n      keys.forEach(k => totals[k] += blockgroup.properties[k])\n      tot_pop += blockgroup.properties.TOTPOP\n    })\n\n    let median_pop = tot_pop / 2;\n    keys.forEach((k, kdex) => {\n      if (median_point === \"\") {\n        median_pop -= totals[k]\n        if (median_pop <= 0) {\n          median_point = kdex\n          median_name = k\n        }\n      }\n    })\n  }\n\n  let cols = keys.map(k => {\n    let age_range = k.replace(\"lt_5\", \"0_4\").replace(\"85_plu\", \"85_90\").split(\"_\"),\n        years = (age_range.length === 2) ? 1 : (age_range[2] - age_range[1] + 1),\n        height = totals[k] / years;\n    col_max_height = Math.max(col_max_height, height)\n    return { width: years * 6, height: height }\n  })\n\n  return <div>\n    <div className=\"histogram\">\n      {cols.map((c, kdex) => {\n        let is_median = (kdex === median_point);\n        return <div key={kdex} style={{\n          background: (is_median ? \"#888\" : \"#444\"),\n          width: c.width,\n          height: (c.height / col_max_height * 100)\n        }}>\n        </div>\n      })}\n    </div>\n    <small>Youngest to Oldest</small>\n    <br/>\n    {median_name ?\n      <span>Median: {median_name.replace(\"age_\", \"\").replace(\"_\", \" – \")}</span>\n      : null\n    }\n  </div>\n}\n","import React from 'react'\n\nexport default function IncomeHistogram(props) {\n  let totals = [],\n      keys = [],\n      selected = props.selected,\n      median_point = \"\",\n      median_name = \"\",\n      col_max_height = 0\n\n  if (selected.length) {\n    keys = Object.keys(selected[0].properties)\n        .filter(p => p.indexOf(\"B19001_\") === 0)\n        .sort()\n\n    totals = keys.map(x => 0)\n\n    let tot_hh = 0;\n    selected.forEach((blockgroup) => {\n      keys.forEach((k, ind) => {\n        totals[ind] += blockgroup.properties[k]\n        tot_hh += blockgroup.properties[k]\n      })\n    })\n\n    let median_hh = tot_hh / 2;\n    totals.forEach((k, kdex) => {\n      col_max_height = Math.max(col_max_height, k)\n      if (median_point === \"\") {\n        median_hh -= k\n        if (median_hh <= 0) {\n          median_point = kdex\n          median_name = [\n            \"< 10k\",\n            \"10-15k\",\n            \"15-20k\",\n            \"20-25k\",\n            \"25-30k\",\n            \"30-35k\",\n            \"35-40k\",\n            \"40-45k\",\n            \"45-50k\",\n            \"50-60k\",\n            \"60-75k\",\n            \"75-100k\",\n            \"100-125k\",\n            \"125-150k\",\n            \"150-200k\",\n            \"> 200k\",\n          ][kdex]\n        }\n      }\n    })\n  }\n\n  return <div>\n    <div className=\"histogram\">\n      {totals.map((c, kdex) => {\n        let is_median = (kdex === median_point);\n        return <div key={kdex} style={{\n          background: (is_median ? \"#888\" : \"#444\"),\n          width: 24,\n          height: (c / col_max_height * 100)\n        }}>\n        </div>\n      })}\n    </div>\n    <small>Least to Most</small>\n    <br/>\n    {median_name ?\n      <span>Median: {median_name.replace(\"age_\", \"\").replace(\"_\", \" – \")}</span>\n      : null\n    }\n  </div>\n}\n","import React from 'react'\n\nexport const elections = [\n  // year, position, DEM key, REP key\n  [2016, \"President\", \"EL16G_PR_D\", \"EL16G_PR_R\"],\n  [2016, \"Governor\", \"EL16G_GV_D\", \"EL16G_GV_R\"],\n  [2016, \"US Senate\", \"EL16G_US_1\", \"EL16G_USS_\"],\n  [2014, \"US Senate\", \"EL14G_US_1\", \"EL14G_USS_\"],\n  [2012, \"President\", \"EL12G_PR_D\", \"EL12G_PR_R\"],\n  [2012, \"Governor\", \"EL12G_GV_D\", \"EL12G_GV_R\"],\n  [2008, \"Governor\", \"EL08G_GV_D\", \"EL08G_GV_R\"],\n  [2008, \"US Senate\", \"EL08G_USS_\", \"EL08G_US_1\"],\n  [2010, \"US Senate\", \"EL10G_USS_\", \"EL10G_US_1\"]\n]\n\nexport function ElectionTable(props) {\n  let selected = props.selected,\n      total_votes = {}\n\n  if (selected.length) {\n    let keys = Object.keys(selected[0].properties)\n      .filter(p => p.indexOf(\"EL\") === 0)\n\n    keys.forEach(k => total_votes[k] = 0)\n\n    selected.forEach(precinct => {\n      keys.forEach(k => total_votes[k] += precinct.properties[k])\n    })\n  }\n\n  return <div>\n    <select value={props.selectedElection} onChange={props.changeElection}>\n      {elections.map((e, i) =>\n        <option key={i} value={i}>{e[0] + \" \" + e[1]}</option>\n      )}\n    </select>\n    <br/><br/>\n    <span>Two-party vote share</span>\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Year</th>\n          <th>Position</th>\n          <th>Democratic</th>\n          <th>Republican</th>\n        </tr>\n      </thead>\n      <tbody>\n        {elections.map((e, i) =>\n          <tr key={i}>\n            <td>{e[0]}</td>\n            <td>{e[1]}</td>\n            <td className=\"digits\">{(total_votes[e[2]] || 0).toLocaleString()}</td>\n            <td className=\"digits\">{(total_votes[e[3]] || 0).toLocaleString()}</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  </div>\n}\n","import React from 'react'\n\nconst colorDot = (color) => <span style={{ background: color }}></span>\n\nexport default function EnvLegend(props) {\n  let selected = props.selected;\n\n  return <div>\n    <span>Source: North Carolina Department of Environmental Quality</span>\n    <br/>\n    <span>Environmental Map Key</span>\n    <br/>\n    <ul className=\"colorList\">\n      <li>{colorDot('purple')} Title V</li>\n      <li>{colorDot('green')} Synthetic Minor</li>\n      <li>{colorDot('red')} Small</li>\n      <li>{colorDot('blue')} Permit Exempt</li>\n      <li>{colorDot('orange')} Registered</li>\n      <li>{colorDot('yellow')} Permit/Registration Pending</li>\n    </ul>\n  </div>\n}\n","import React from 'react'\n\nexport default function EnvLegend(props) {\n  let selected = props.selected;\n\n\n  return <div>\n    <span>Source: Homeland Infrastructure Foundation</span>\n\n  </div>\n}\n","import React from 'react'\n\nexport default function EnvLegend(props) {\n  let selected = props.selected;\n\n\n  return <div>\n    <span>Source: Homeland Infrastructure Foundation</span>\n\n  </div>\n}\n","// The addBelowLabels method gives the right look on the Mapbox \"streets\" basemap,\r\n// while addBelowSymbols gives the right look on the \"light\" basemap.\r\n\r\n/**\r\n * Add the layer to the map below the first label layer (e.g. street names).\r\n * @param {mapboxgl.Map} map\r\n * @param {Layer} layer\r\n */\r\nexport function addBelowLabels(map, layer) {\r\n    const layers = map.getStyle().layers;\r\n    const firstSymbolId = getFirstLabelId(layers);\r\n    map.addLayer(layer, firstSymbolId);\r\n}\r\n\r\nexport function addBelowSymbols(map, layer) {\r\n    const layers = map.getStyle().layers;\r\n    const firstSymbolId = getFirstSymbolId(layers);\r\n    map.addLayer(layer, firstSymbolId);\r\n}\r\n\r\n/**\r\n * @param {Object[]} layers list of layers from the Mapbox map's style\r\n * @returns {string} id of the first id with \"label\" in the name\r\n */\r\nfunction getFirstLabelId(layers) {\r\n    for (let i = 0; i < layers.length; i++) {\r\n        if (layers[i].id.includes(\"label\")) {\r\n            return layers[i].id;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getFirstSymbolId(layers) {\r\n    for (let i = 0; i < layers.length; i++) {\r\n        if (layers[i].type === \"symbol\") {\r\n            return layers[i].id;\r\n        }\r\n    }\r\n}\r\n\r\n/** A layer on a Mapbox map. */\r\nexport default class Layer {\r\n    /**\r\n     * @param {mapboxgl.Map} map to add the layer to\r\n     * @param {Object} layer a Layer object obeying the Mapbox style specification\r\n     * @param {function} [adder] a function (map, layer) -> void that adds the layer\r\n     *  to the map.\r\n     */\r\n    constructor(map, layer, adder) {\r\n        this.map = map;\r\n        this.layer = layer;\r\n        this.id = layer.id;\r\n        this.sourceId = layer.source;\r\n        this.type = layer.type;\r\n        this.sourceLayer = layer[\"source-layer\"];\r\n\r\n        if (adder) {\r\n            adder(map, layer);\r\n        } else if (map) {\r\n            map.addLayer(layer);\r\n        }\r\n\r\n        this.getFeature = this.getFeature.bind(this);\r\n    }\r\n    addToMap(map) {\r\n      if (map && !this.map) {\r\n        this.map = map;\r\n        map.addLayer(this.layer);\r\n      }\r\n    }\r\n    remove() {\r\n      if (this.map) {\r\n        this.map.removeLayer(this.id);\r\n        this.map = null;\r\n      }\r\n    }\r\n    setOpacity(opacity, isText) {\r\n        this.setPaintProperty(`${isText ? \"text\" : this.type.replace(\"symbol\", \"icon\")}-opacity`, opacity);\r\n    }\r\n    setColor(color) {\r\n        this.setPaintProperty(`${this.type}-color`, color);\r\n    }\r\n    getColor() {\r\n        return this.getPaintProperty(`${this.type}-color`);\r\n    }\r\n    setPaintProperties(properties) {\r\n        for (let name in properties) {\r\n            this.setPaintProperty(name, properties[name]);\r\n        }\r\n    }\r\n    setFeatureState(featureId, state) {\r\n        this.map.setFeatureState(\r\n            {\r\n                source: this.sourceId,\r\n                sourceLayer: this.sourceLayer,\r\n                id: featureId\r\n            },\r\n            state\r\n        );\r\n    }\r\n    setPaintProperty(name, value) {\r\n        this.map.setPaintProperty(this.id, name, value);\r\n    }\r\n    getPaintProperty(name) {\r\n        return this.map.getPaintProperty(this.id, name);\r\n    }\r\n    getFeatureState(featureId) {\r\n        return this.map.getFeatureState({\r\n            source: this.sourceId,\r\n            sourceLayer: this.sourceLayer,\r\n            id: featureId\r\n        });\r\n    }\r\n    getFeature(featureId) {\r\n        const features = this.map.querySourceFeatures(this.sourceId, {\r\n            sourceLayer: this.sourceLayer,\r\n            filter: [\"==\", [\"id\"], featureId]\r\n        });\r\n        return features[0];\r\n    }\r\n    queryRenderedFeatures() {\r\n        return this.map.queryRenderedFeatures(null, { layers: [this.id] });\r\n    }\r\n    querySourceFeatures() {\r\n        return this.map.querySourceFeatures(this.sourceId, {\r\n            sourceLayer: this.sourceLayer\r\n        });\r\n    }\r\n    getAssignment(featureId) {\r\n        return this.getFeatureState(featureId).color;\r\n    }\r\n    setAssignment(feature, part) {\r\n        this.setFeatureState(feature.id, {\r\n            ...feature.state,\r\n            color: part\r\n        });\r\n    }\r\n    on(type, ...args) {\r\n        this.map.on(type, this.id, ...args);\r\n    }\r\n    off(type, ...args) {\r\n        this.map.off(type, this.id, ...args);\r\n    }\r\n    untilSourceLoaded(callback) {\r\n        if (this.map.isSourceLoaded(this.sourceId)) {\r\n            return callback();\r\n        }\r\n        const handler = () =>\r\n            callback(() => this.map.off(\"sourcedata\", handler));\r\n        this.map.on(\"sourcedata\", handler);\r\n    }\r\n}\r\n","export class Hover {\r\n    constructor(layer) {\r\n        this.layer = layer;\r\n\r\n        this.hoveredFeature = null;\r\n        this.deactivatedHover = false;\r\n\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onMouseLeave = this.onMouseLeave.bind(this);\r\n        this.hoverOff = this.hoverOff.bind(this);\r\n    }\r\n    hoverOff() {\r\n        if (this.hoveredFeature !== null) {\r\n            this.layer.setFeatureState(this.hoveredFeature.id, {\r\n                ...this.hoveredFeature.state,\r\n                hover: false\r\n            });\r\n            this.hoveredFeature = null;\r\n        }\r\n    }\r\n    hoverOn(feature) {\r\n        this.hoveredFeature = feature;\r\n        if (!this.deactivatedHover) {\r\n            this.layer.setFeatureState(feature.id, {\r\n                ...feature.state,\r\n                hover: true\r\n            });\r\n        }\r\n    }\r\n    onMouseMove(e) {\r\n        if (e.features.length > 0) {\r\n            this.hoverOff();\r\n            this.hoverOn(e.features[0]);\r\n        }\r\n    }\r\n    onMouseLeave() {\r\n        this.hoverOff();\r\n    }\r\n    activate(mouseover) {\r\n        if (mouseover) {\r\n            this.deactivatedHover = false;\r\n            return;\r\n        }\r\n        this.layer.on(\"mousemove\", this.onMouseMove);\r\n        this.layer.on(\"mouseleave\", this.onMouseLeave);\r\n        this.layer.on(\"touchmove\", this.onMouseMove);\r\n        this.layer.on(\"touchend\", this.onMouseLeave);\r\n    }\r\n    deactivate(mouseover) {\r\n        if (mouseover) {\r\n            this.deactivatedHover = true;\r\n            return;\r\n        }\r\n        this.layer.off(\"mousemove\", this.onMouseMove);\r\n        this.layer.off(\"mouseleave\", this.onMouseLeave);\r\n        this.layer.off(\"touchmove\", this.onMouseMove);\r\n        this.layer.off(\"touchend\", this.onMouseLeave);\r\n    }\r\n}\r\n\r\nexport class HoverWithRadius extends Hover {\r\n    constructor(layer, radius, setMapSelection) {\r\n        super(layer);\r\n\r\n        this.radius = radius;\r\n        this.hoveredFeatures = [];\r\n        this.setMapSelection = setMapSelection;\r\n    }\r\n    hoverOff() {\r\n        this.hoveredFeatures.forEach(feature => {\r\n            let featureState = this.layer.getFeatureState(feature.id);\r\n            this.layer.setFeatureState(feature.id, {\r\n                ...featureState,\r\n                hover: false\r\n            });\r\n        });\r\n        this.hoveredFeatures = [];\r\n        this.setMapSelection(this.hoveredFeatures);\r\n    }\r\n    hoverOn(features) {\r\n        this.hoveredFeatures = features;\r\n        if (!this.deactivatedHover) {\r\n            this.hoveredFeatures.forEach(feature => {\r\n                this.layer.setFeatureState(feature.id, {\r\n                    ...feature.state,\r\n                    hover: true\r\n                });\r\n            });\r\n        }\r\n        this.setMapSelection(this.hoveredFeatures);\r\n    }\r\n    onMouseMove(e) {\r\n        const box = boxAround(e.point, this.radius);\r\n        const features = this.layer.map.queryRenderedFeatures(box, {\r\n            layers: [this.layer.id]\r\n        });\r\n        if (features.length > 0) {\r\n            this.hoverOff();\r\n            this.hoverOn(features);\r\n        }\r\n    }\r\n}\r\n\r\nfunction boxAround(point, radius) {\r\n    const southwest = [point.x + radius, point.y + radius];\r\n    const northeast = [point.x - radius, point.y - radius];\r\n    return [northeast, southwest];\r\n}\r\n","export function changeColorLuminance(hex, lum) {\n    // validate hex string\n    hex = String(hex).replace(/[^0-9a-f]/gi, \"\");\n    if (hex.length < 6) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    lum = lum || 0;\n\n    // convert to decimal and change luminosity\n    let rgb = \"#\",\n        c,\n        i;\n    for (i = 0; i < 3; i++) {\n        c = parseInt(hex.substr(i * 2, 2), 16);\n        c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n        rgb += (\"00\" + c).substr(c.length);\n    }\n\n    return rgb;\n}\n\nexport function getUnitColorProperty(parts) {\n    const unitColorStyle = [\n        \"match\",\n        [\"feature-state\", \"color\"],\n        ...parts\n            .map(part => [part.id, part.color])\n            .reduce((list, pair) => [...list, ...pair]),\n        \"rgba(0, 0, 0, 0)\"\n    ];\n\n    const hoveredUnitColorStyle = [\n        \"match\",\n        [\"feature-state\", \"color\"],\n        ...parts\n            .map(part => [part.id, part.hoverColor])\n            .reduce((list, pair) => [...list, ...pair]),\n        \"#aaaaaa\"\n    ];\n\n    const unitColorProperty = [\n        \"case\",\n        [\"boolean\", [\"feature-state\", \"hover\"], false],\n        hoveredUnitColorStyle,\n        unitColorStyle\n    ];\n\n    return unitColorProperty;\n}\n","import React from 'react'\n\n// UI components\nimport ChooseLayers from '../components/ChooseLayers'\nimport AgeHistogram from '../components/AgeHistogram'\nimport IncomeHistogram from '../components/IncomeHistogram'\nimport { elections, ElectionTable } from '../components/ElectionTable'\nimport EnvLegend from '../components/EnvLegend'\nimport MedLegend from '../components/MedLegend'\nimport UniLegend from '../components/UniLegend'\n\n// map management\nimport Layer from '../layers/Layer'\nimport { HoverWithRadius } from '../layers/Hover'\nimport { changeColorLuminance, getUnitColorProperty } from '../colors'\n\nwindow.mapboxgl.accessToken = \"pk.eyJ1IjoiZGlzdHJpY3RyIiwiYSI6ImNqbjUzMTE5ZTBmcXgzcG81ZHBwMnFsOXYifQ.8HRRLKHEJA0AismGk2SX2g\";\n\nconst dataLayers = [\n  {\n    name: \"Age\",\n    units: \"blockgroups\",\n  },\n  {\n    name: \"Income\",\n    units: \"blockgroups\",\n  },\n  {\n    name: \"Race\",\n    units: \"precincts\",\n  },\n  {\n    name: \"Elections\",\n    units: \"precincts\",\n  },\n  {\n    name: \"Environment\",\n    units: \"points\"\n  },\n  // {\n  //   name: \"Food\",\n  //   units: \"tracts\"\n  // },\n  {\n    name: \"Colleges\",\n    units: \"points\"\n  },\n  {\n    name: \"Hospitals\",\n    units: \"points\"\n  }\n];\n\nlet parts = [\n  {id:0,color:\"#0099cd\"},\n  {id:1,color:\"#ffca5d\"},\n  {id:2,color:\"#00cd99\"}\n];\nparts.forEach(part => {\n  part.hoverColor = changeColorLuminance(part.color, -0.3);\n});\n\nexport default class Map extends React.Component {\n  constructor (props) {\n    super()\n\n    this.state = {\n      mapLoaded: false,\n\n      currentColorLayer: 0,\n      currentUnitLayer: '',\n      unitLayers: {},\n      pointLayers: {},\n      mapSelection: [],\n\n      selectedElection: 0\n    }\n  }\n\n  componentDidMount() {\n    let state_configs = {\n      nc: {\n        center: [-80.1, 35.2154083],\n        zoom: 5.5\n      }\n    }\n\n    this.map = new window.mapboxgl.Map({\n      container: this.refs.map,\n      style: 'mapbox://styles/mapbox/light-v10',\n      center: state_configs.nc.center,\n      zoom: state_configs.nc.zoom,\n      attributionControl: false,\n      pitchWithRotate: false,\n      // preserveDrawingBuffer: true,\n      dragPan: true,\n      touchZoomRotate: true,\n    })\n\n    this.map.on('load', () => {\n      let geocoder = new window.MapboxGeocoder({\n        accessToken: window.mapboxgl.accessToken,\n        marker: {\n          color: 'orange'\n        },\n        mapboxgl: window.mapboxgl\n      })\n      this.map.addControl(geocoder, \"top-left\")\n\n      this.map.addControl(new window.mapboxgl.NavigationControl())\n\n      // NC state outline\n      this.map.addSource('state_outline', {\n        type: \"vector\",\n        url: \"mapbox://mapbox.hist-pres-election-state\"\n      })\n      this.map.addLayer({\n        id: 'state_outline',\n        source: 'state_outline',\n        \"source-layer\": \"historical_pres_elections_state\",\n        type: 'line',\n        paint: {\n          'line-color': '#555',\n          'line-width': [\"case\", [\"==\", [\"get\", \"state_abbrev\"], \"NC\"], 1.5, 0]\n        }\n      })\n\n      // NC precincts\n      this.map.addSource('precincts', {\n        type: \"vector\",\n        url: \"mapbox://districtr.nc_precincts\"\n      })\n      let borderPrecincts = new Layer(null, {\n        id: 'precincts-borders',\n        source: 'precincts',\n        'source-layer': 'nc_precincts',\n        type: 'line',\n        paint: {\n          \"line-color\": \"#777777\",\n          \"line-width\": [\"interpolate\", [\"linear\"], [\"zoom\"], 0, 0, 7, 1],\n          \"line-opacity\": 0.3\n        }\n      })\n      let fillPrecincts = new Layer(null, { // don't add to map right now\n        id: 'precincts',\n        source: 'precincts',\n        'source-layer': 'nc_precincts',\n        type: 'fill',\n        paint: {\n          \"fill-color\": getUnitColorProperty(parts),\n          \"fill-opacity\": 0.8\n        }\n      })\n      let cursorPrecincts = new HoverWithRadius(\n        fillPrecincts,\n        20,\n        this.setMapSelection.bind(this)\n      )\n\n      // NC blockgroups\n      this.map.addSource('blockgroups', {\n        type: \"vector\",\n        url: \"mapbox://districtr.nc_bg_blockgroups\"\n      })\n      let borderBGs = new Layer(this.map, {\n        id: 'blockgroups-borders',\n        source: 'blockgroups',\n        'source-layer': 'nc_bg_blockgroups',\n        type: 'line',\n        paint: {\n          \"line-color\": \"#777777\",\n          \"line-width\": [\"interpolate\", [\"linear\"], [\"zoom\"], 0, 0, 7, 1],\n          \"line-opacity\": 0.3\n        }\n      })\n      let fillBGs = new Layer(this.map, {\n        id: 'blockgroups',\n        source: 'blockgroups',\n        'source-layer': 'nc_bg_blockgroups',\n        type: 'fill',\n        paint: {\n          \"fill-color\": getUnitColorProperty(parts),\n          \"fill-opacity\": 0.8\n        }\n      })\n      let cursorBGs = new HoverWithRadius(\n        fillBGs,\n        20,\n        this.setMapSelection.bind(this)\n      )\n      cursorBGs.activate()\n\n      // NC environment\n      fetch(\"./nc-geo/nc_industry.geojson\").then(res => res.json()).then(gj => {\n        this.map.addSource('enviro', {\n          type: \"geojson\",\n          data: gj\n        })\n        this.state.pointLayers[\"Environment\"] = new Layer(null, {\n          id: 'enviro',\n          source: 'enviro',\n          type: 'circle',\n          paint: {\n            'circle-radius': 4,\n            'circle-color': [\n              'match',\n              ['get', 'CLASS_STATUS'],\n              'Title V', 'purple',\n              'Synthetic Minor', 'green',\n              'Small', 'red',\n              'Permit Exempt', 'blue',\n              'Registered', 'orange',\n              'Permit/Registration Pending', 'yellow',\n              '#ccc' // other\n            ]\n          }\n        })\n      })\n\n      // NC colleges\n      fetch(\"./nc-geo/nc_colleges.geojson\").then(res => res.json()).then(gj => {\n        this.map.addSource('colleges', {\n          type: \"geojson\",\n          data: gj\n        })\n        this.state.pointLayers[\"Colleges\"] = new Layer(null, {\n          id: 'colleges',\n          source: 'colleges',\n          type: 'circle',\n          paint: {\n            'circle-radius': 4,\n            'circle-color': 'blue'\n          }\n        })\n      })\n\n      // NC hospitals\n      fetch(\"./nc-geo/nc_hospitals.geojson\").then(res => res.json()).then(gj => {\n        this.map.addSource('hospitals', {\n          type: \"geojson\",\n          data: gj\n        })\n        this.state.pointLayers[\"Hospitals\"] = new Layer(null, {\n          id: 'hospitals',\n          source: 'hospitals',\n          type: 'circle',\n          paint: {\n            'circle-radius': 4,\n            'circle-color': 'red'\n          }\n        })\n      })\n\n      this.setState({\n        currentUnitLayer: 'blockgroups',\n        unitLayers: {\n          blockgroups: fillBGs,\n          blockgroups_border: borderBGs,\n          blockgroups_cursor: cursorBGs,\n          precincts: fillPrecincts,\n          precincts_border: borderPrecincts,\n          precincts_cursor: cursorPrecincts\n        },\n        mapLoaded: true\n      })\n\n    })\n  }\n\n  setMapSelection(items) {\n    this.setState({\n      mapSelection: items\n    })\n  }\n\n  changeElection(event) {\n    const newSelection = event\n            ? event.target.value\n            : this.state.selectedElection,\n          newElection = elections[newSelection];\n\n    const partyRGBColors = {\n      Democratic: [\n        0, \"rgba(0,0,0,0)\",\n        0.499, \"rgba(0,0,0,0)\",\n        0.5, \"rgba(249,249,249,0)\",\n        1, \"rgb(25, 118, 210)\" // 0x1976d2\n      ],\n      Democratic_hover: [\n        0, \"rgba(0,0,0,0)\",\n        0.499, \"rgba(0,0,0,0)\",\n        0.5, \"rgba(174,174,174,0.5)\",\n        1, \"rgb(18, 83, 147)\"\n      ],\n      Republican: [\n        0, \"rgba(0,0,0,0)\",\n        0.499, \"rgba(0,0,0,0)\",\n        0.5, \"rgba(249,249,249,0)\",\n        1, \"rgb(211, 47, 47)\" // 0xd32f2f\n      ],\n      Republican_hover: [\n        0, \"rgba(0,0,0,0)\",\n        0.499, \"rgba(0,0,0,0)\",\n        0.5, \"rgba(174,174,174,0.5)\",\n        1, \"rgb(148, 33, 33)\"\n      ],\n    };\n\n    // also need feature to trigger this when elections are first loaded\n    this.state.unitLayers.precincts.setPaintProperty(\n      \"fill-color\",\n      [\n        \"case\",\n        [\">\", [\"get\", newElection[2]], [\"get\", newElection[3]]],\n          [\"case\",\n            [\"==\", [\"feature-state\", \"hover\"], true],\n            [\n                \"interpolate\",\n                [\"linear\"],\n                [\"/\", [\"get\", newElection[2]], [\"+\", [\"get\", newElection[2]], [\"get\", newElection[3]]]],\n                ...partyRGBColors[\"Democratic_hover\"],\n            ],\n            [\n                \"interpolate\",\n                [\"linear\"],\n                [\"/\", [\"get\", newElection[2]], [\"+\", [\"get\", newElection[2]], [\"get\", newElection[3]]]],\n                ...partyRGBColors[\"Democratic\"],\n            ]\n          ],\n          [\"case\",\n            [\"==\", [\"feature-state\", \"hover\"], true],\n            [\n                \"interpolate\",\n                [\"linear\"],\n                [\"/\", [\"get\", newElection[3]], [\"+\", [\"get\", newElection[2]], [\"get\", newElection[3]]]],\n                ...partyRGBColors[\"Republican_hover\"],\n            ],\n            [\n                \"interpolate\",\n                [\"linear\"],\n                [\"/\", [\"get\", newElection[3]], [\"+\", [\"get\", newElection[2]], [\"get\", newElection[3]]]],\n                ...partyRGBColors[\"Republican\"],\n            ]\n          ]\n      ]\n    )\n\n    this.setState({ selectedElection: newSelection })\n  }\n\n  switchLayer(layer_id) {\n    let selectLayer = dataLayers[layer_id];\n\n    if (dataLayers[this.state.currentColorLayer].units === \"points\") {\n      // remove current point layer\n      this.state.pointLayers[dataLayers[this.state.currentColorLayer].name].remove()\n    }\n\n    if (selectLayer.units === \"points\") {\n      // points file\n      this.state.pointLayers[selectLayer.name].addToMap(this.map)\n      this.setState({\n        currentColorLayer: layer_id\n      })\n    } else if (selectLayer.units === this.state.currentUnitLayer) {\n      // same units\n      this.setState({\n        currentColorLayer: layer_id\n      })\n    } else {\n      this.state.unitLayers[this.state.currentUnitLayer + \"_cursor\"].deactivate()\n      this.state.unitLayers[this.state.currentUnitLayer].remove()\n      this.state.unitLayers[this.state.currentUnitLayer + \"_border\"].remove()\n\n      this.state.unitLayers[selectLayer.units].addToMap(this.map)\n      this.state.unitLayers[selectLayer.units + \"_border\"].addToMap(this.map)\n      this.state.unitLayers[selectLayer.units + \"_cursor\"].activate()\n\n      this.setState({\n        currentUnitLayer: selectLayer.units,\n        currentColorLayer: layer_id\n      })\n    }\n\n    if (selectLayer.name === \"Elections\") {\n      this.changeElection()\n    }\n  }\n\n  render() {\n    let activeLayer = dataLayers[this.state.currentColorLayer].name;\n\n    return <>\n      <div className=\"map\" ref=\"map\">\n      </div>\n      <div className=\"legend\">\n        <div className=\"options\">\n          <ChooseLayers\n            labels={dataLayers}\n            switchLayer={this.switchLayer.bind(this)}\n            disabled={!this.state.mapLoaded}\n          />\n        </div>\n        <div className=\"outputs\">\n          {activeLayer}\n          -\n          Units: {this.state.currentUnitLayer}\n          <br/>\n          {activeLayer === \"Age\" ? <AgeHistogram selected={this.state.mapSelection}/> : null}\n          {activeLayer === \"Income\" ? <IncomeHistogram selected={this.state.mapSelection}/> : null}\n          {activeLayer === \"Elections\" ?\n            <ElectionTable\n              selected={this.state.mapSelection}\n              selectedElection={this.state.selectedElection}\n              changeElection={this.changeElection.bind(this)}\n              />\n            : null}\n          {activeLayer === \"Environment\" ? <EnvLegend selected={this.state.mapSelection}/> : null}\n          {activeLayer === \"Hospitals\" ? <MedLegend selected={this.state.mapSelection}/> : null}\n          {activeLayer === \"Colleges\" ? <UniLegend selected={this.state.mapSelection}/> : null}\n        </div>\n      </div>\n    </>\n  }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Map from './pages/Map';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Redistricting in North Carolina</h1>\n        <h3>Demo Version</h3>\n      </header>\n      <section>\n        <p>\n          We have developed a demo app to map out statewide and local\n          decisions in redistricting. Interactive layers make it possible\n          to analyze district lines based on age, race, environmental health, past elections,\n          and other factors.\n        </p>\n\n        <Map/>\n\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}